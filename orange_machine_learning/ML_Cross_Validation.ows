<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="Cross-Validation" description="How good are supervised data mining methods on your classification dataset? Here's a workflow that scores various classification techniques on a dataset from medicine. The central widget here is the one for testing and scoring, which is given the data and a set of learners, does cross-validation and scores predictive accuracy, and outputs the scores for further examination.">
	<nodes>
		<node id="0" name="Test and Score" qualified_name="Orange.widgets.evaluate.owtestandscore.OWTestAndScore" project_name="Orange3" version="" title="Test &amp; Score" position="(314.7692307692308, 194.53846153846155)" />
		<node id="1" name="Logistic Regression" qualified_name="Orange.widgets.model.owlogisticregression.OWLogisticRegression" project_name="Orange3" version="" title="Logistic Regression" position="(-131.0, 55.0)" />
		<node id="2" name="Random Forest" qualified_name="Orange.widgets.model.owrandomforest.OWRandomForest" project_name="Orange3" version="" title="Random Forest Classification" position="(-265.0, 113.0)" />
		<node id="3" name="SVM" qualified_name="Orange.widgets.model.owsvm.OWSVM" project_name="Orange3" version="" title="SVM" position="(-147.0, 180.0)" />
		<node id="4" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="Data Table" position="(-353.0, 410.0)" />
		<node id="5" name="Confusion Matrix" qualified_name="Orange.widgets.evaluate.owconfusionmatrix.OWConfusionMatrix" project_name="Orange3" version="" title="Confusion Matrix" position="(742.0, 183.0)" />
		<node id="6" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="PY - Import train.parquet" position="(-289.0, 694.0)" />
		<node id="7" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns and also define Target" position="(63.0, 705.0)" />
		<node id="8" name="Edit Domain" qualified_name="Orange.widgets.data.oweditdomain.OWEditDomain" project_name="Orange3" version="" title="Edit Domain (define Target as 0/1 string)" position="(-106.0, 704.0)" />
		<node id="9" name="Load Model" qualified_name="Orange.widgets.model.owloadmodel.OWLoadModel" project_name="Orange3" version="" title="Load Model" position="(657.0, 578.0)" />
		<node id="10" name="AdaBoost" qualified_name="Orange.widgets.model.owadaboost.OWAdaBoost" project_name="Orange3" version="" title="AdaBoost" position="(-244.0, 248.0)" />
		<node id="11" name="Save Model" qualified_name="Orange.widgets.model.owsavemodel.OWSaveModel" project_name="Orange3" version="" title="best_model.pkcls store the best model on disk" position="(1058.0, 301.0)" />
		<node id="12" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="PY - Import test.parquet" position="(177.0, 930.0)" />
		<node id="13" name="Apply Domain" qualified_name="Orange.widgets.data.owtransform.OWTransform" project_name="Orange3" version="" title="Apply Domain" position="(353.0, 720.0)" />
		<node id="14" name="ROC Analysis" qualified_name="Orange.widgets.evaluate.owrocanalysis.OWROCAnalysis" project_name="Orange3" version="" title="ROC Analysis" position="(633.9999999999999, 84.69230769230768)" />
		<node id="15" name="Feature Statistics" qualified_name="Orange.widgets.data.owfeaturestatistics.OWFeatureStatistics" project_name="Orange3" version="" title="Feature Statistics" position="(262.0, 558.0)" />
		<node id="16" name="Gradient Boosting" qualified_name="Orange.widgets.model.owgradientboosting.OWGradientBoosting" project_name="Orange3" version="" title="Gradient Boosting" position="(-132.0, 303.0)" />
		<node id="17" name="Stacking" qualified_name="Orange.widgets.model.owstack.OWStackedLearner" project_name="Orange3" version="" title="Stacking" position="(113.0, -27.0)" />
		<node id="18" name="Neural Network" qualified_name="Orange.widgets.model.owneuralnetwork.OWNNLearner" project_name="Orange3" version="" title="Neural Network" position="(57.0, 432.0)" />
		<node id="19" name="Stochastic Gradient Descent" qualified_name="Orange.widgets.model.owsgd.OWSGD" project_name="Orange3" version="" title="Stochastic Gradient Descent" position="(60.0, 529.0)" />
		<node id="20" name="Performance Curve" qualified_name="Orange.widgets.evaluate.owliftcurve.OWLiftCurve" project_name="Orange3" version="" title="Performance Curve - compare various models" position="(468.0, 387.5384615384615)" />
		<node id="21" name="Performance Curve" qualified_name="Orange.widgets.evaluate.owliftcurve.OWLiftCurve" project_name="Orange3" version="" title="Performance Curve (select the best model) currently GBM" position="(749.0, 300.0)" />
		<node id="22" name="Predictions" qualified_name="Orange.widgets.evaluate.owpredictions.OWPredictions" project_name="Orange3" version="" title="Predictions" position="(885.0, 589.0)" />
		<node id="23" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="inspect the results" position="(1220.0, 402.0)" />
		<node id="24" name="Save Data" qualified_name="Orange.widgets.data.owsave.OWSave" project_name="Orange3" version="" title="scored_data.pkl.gz" position="(1235.0, 564.0)" />
		<node id="25" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="keep only scores and IDs" position="(1053.0, 590.0)" />
		<node id="26" name="Save Data" qualified_name="Orange.widgets.data.owsave.OWSave" project_name="Orange3" version="" title="scored_data.tab" position="(1234.0, 738.0)" />
		<node id="27" name="Naive Bayes" qualified_name="Orange.widgets.model.ownaivebayes.OWNaiveBayes" project_name="Orange3" version="" title="Naive Bayes" position="(-30.0, -23.0)" />
		<node id="28" name="Gradient Boosting" qualified_name="Orange.widgets.model.owgradientboosting.OWGradientBoosting" project_name="Orange3" version="" title="XGBoost" position="(-187.0, 406.0)" />
		<node id="29" name="Gradient Boosting" qualified_name="Orange.widgets.model.owgradientboosting.OWGradientBoosting" project_name="Orange3" version="" title="CatBoost" position="(-72.0, 425.0)" />
		<node id="30" name="Save Data" qualified_name="Orange.widgets.data.owsave.OWSave" project_name="Orange3" version="" title="train.pkl.gz" position="(181.0, 802.0)" />
		<node id="31" name="Save Data" qualified_name="Orange.widgets.data.owsave.OWSave" project_name="Orange3" version="" title="test.pkl.gz" position="(535.0, 940.0)" />
		<node id="32" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="train.pkl.gz" position="(736.0, 719.0)" />
		<node id="33" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="test.pkl.gz" position="(747.0, 937.0)" />
		<node id="34" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWDataTable" project_name="Orange3" version="" title="inspect the test data" position="(539.0, 729.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="1" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="1" source_node_id="2" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="2" source_node_id="3" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="3" source_node_id="0" sink_node_id="5" source_channel="Evaluation Results" sink_channel="Evaluation Results" enabled="true" source_channel_id="evaluations_results" sink_channel_id="evaluation_results" />
		<link id="4" source_node_id="6" sink_node_id="4" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="5" source_node_id="6" sink_node_id="8" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="6" source_node_id="8" sink_node_id="7" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="7" source_node_id="7" sink_node_id="0" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="train_data" />
		<link id="8" source_node_id="7" sink_node_id="15" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="9" source_node_id="0" sink_node_id="14" source_channel="Evaluation Results" sink_channel="Evaluation Results" enabled="true" source_channel_id="evaluations_results" sink_channel_id="evaluation_results" />
		<link id="10" source_node_id="7" sink_node_id="13" source_channel="Data" sink_channel="Template Data" enabled="true" source_channel_id="data" sink_channel_id="template_data" />
		<link id="11" source_node_id="12" sink_node_id="13" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="12" source_node_id="13" sink_node_id="0" source_channel="Transformed Data" sink_channel="Test Data" enabled="true" source_channel_id="transformed_data" sink_channel_id="test_data" />
		<link id="13" source_node_id="10" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="14" source_node_id="16" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="15" source_node_id="18" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="16" source_node_id="19" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="17" source_node_id="17" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="18" source_node_id="0" sink_node_id="20" source_channel="Evaluation Results" sink_channel="Evaluation Results" enabled="true" source_channel_id="evaluations_results" sink_channel_id="evaluation_results" />
		<link id="19" source_node_id="0" sink_node_id="21" source_channel="Evaluation Results" sink_channel="Evaluation Results" enabled="true" source_channel_id="evaluations_results" sink_channel_id="evaluation_results" />
		<link id="20" source_node_id="21" sink_node_id="11" source_channel="Calibrated Model" sink_channel="Model" enabled="true" source_channel_id="calibrated_model" sink_channel_id="model" />
		<link id="21" source_node_id="9" sink_node_id="22" source_channel="Model" sink_channel="Predictors" enabled="true" source_channel_id="model" sink_channel_id="predictors" />
		<link id="22" source_node_id="22" sink_node_id="25" source_channel="Predictions" sink_channel="Data" enabled="true" source_channel_id="predictions" sink_channel_id="data" />
		<link id="23" source_node_id="25" sink_node_id="24" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="24" source_node_id="25" sink_node_id="26" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="25" source_node_id="27" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="26" source_node_id="28" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="27" source_node_id="29" sink_node_id="0" source_channel="Learner" sink_channel="Learner" enabled="true" source_channel_id="learner" sink_channel_id="learner" />
		<link id="28" source_node_id="7" sink_node_id="30" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="29" source_node_id="33" sink_node_id="22" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="30" source_node_id="13" sink_node_id="34" source_channel="Transformed Data" sink_channel="Data" enabled="true" source_channel_id="transformed_data" sink_channel_id="data" />
		<link id="31" source_node_id="12" sink_node_id="31" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="32" source_node_id="25" sink_node_id="23" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
	</links>
	<annotations>
		<text id="0" type="text/plain" rect="(-474.0, 211.0, 171.0, 54.0)" font-family="Helvetica" font-size="14">It's always a good idea to check out the data first.</text>
		<text id="1" type="text/plain" rect="(858.1538461538461, 62.615384615384606, 150.0, 69.0)" font-family="Helvetica" font-size="14">Use for additional analysis of cross-validation results.</text>
		<text id="2" type="text/plain" rect="(264.0, -38.0, 132.0, 92.0)" font-family="Helvetica" font-size="14">Cross-validation takes place here. Double click to see the performance scores.</text>
		<text id="3" type="text/plain" rect="(-302.0, -61.0, 150.0, 76.0)" font-family="Helvetica" font-size="14">Several learners can be scored in cross-validation at the same time.</text>
		<arrow id="4" start="(-402.0, 275.00000000000006)" end="(-366.0, 363.0)" fill="#C1272D" />
		<arrow id="5" start="(353.0, 38.0)" end="(308.0, 146.0)" fill="#C1272D" />
		<arrow id="6" start="(836.6923076923076, 86.38461538461539)" end="(687.4615384615383, 89.3076923076923)" fill="#C1272D" />
		<arrow id="7" start="(-232.99999999999997, 1.7763568394002505e-15)" end="(-177.99999999999997, 39.00000000000001)" fill="#39B54A" />
		<text id="8" type="text/plain" rect="(-437.0, 1101.0, 662.0, 183.0)" font-family=".AppleSystemUIFont" font-size="16"># KNIME and Python — Setting up and managing Conda environments
# https://medium.com/p/2ac217792539

conda create --name py_orange python=3.9
conda activate py_orange
conda install pip
conda config --add channels conda-forge
conda update -n py_orange --all
conda install -n py_orange -c conda-forge xgboost</text>
		<text id="9" type="text/plain" rect="(-403.0, 805.0, 215.0, 90.0)" font-family=".AppleSystemUIFont" font-size="16">Import data from a .parquet file and import into orange</text>
		<arrow id="10" start="(-387.0, 801.0)" end="(-339.0, 738.0)" fill="#C1272D" />
		<arrow id="11" start="(974.0, 374.0)" end="(703.0, 542.0)" fill="#C1272D" />
		<arrow id="12" start="(568.9999999999999, 939.0)" end="(702.0, 939.0000000000001)" fill="#C1272D" />
		<arrow id="13" start="(540.0, 395.0)" end="(674.0, 354.0)" fill="#C1272D" />
		<text id="14" type="text/plain" rect="(558.0, 402.0, 173.0, 75.0)" font-family=".AppleSystemUIFont" font-size="16">select the best model
to be stored</text>
		<text id="15" type="text/html" rect="(417.3076923076924, -65.15384615384616, 495.0, 119.0)" font-family=".AppleSystemUIFont" font-size="16">&lt;H1&gt;EXPLORE Machine Learning Models with Orange3&lt;/H1&gt;

https://medium.com/p/d185214037af</text>
	</annotations>
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="pickle">gASVngYAAAAAAAB9lCiMFGNvbXBhcmlzb25fY3JpdGVyaW9ulEsAjBJjb250cm9sQXJlYVZpc2li
bGWUiIwNY3Zfc3RyYXRpZmllZJSIjAduX2ZvbGRzlEsCjAluX3JlcGVhdHOUSwOMCnJlc2FtcGxp
bmeUSwWMBHJvcGWURz+5mZmZmZmajAtzYW1wbGVfc2l6ZZRLCYwTc2F2ZWRXaWRnZXRHZW9tZXRy
eZRDQgHZ0MsAAwAAAAAFcAAAANYAAAkQAAADYgAABXAAAADyAAAJEAAAA2IAAAAAAAAAAAoAAAAF
cAAAAPIAAAkQAAADYpSMEnNodWZmbGVfc3RyYXRpZmllZJSIjAh1c2Vfcm9wZZSJjAtzY29yZV90
YWJsZZR9lIwMc2hvd25fc2NvcmVzlI+UKIwCUjKUjAlQcmVjaXNpb26UjANNQUWUjAJDQZSMB0Mt
SW5kZXiUjANBVUOUjAZSZWNhbGyUjANNU0WUjAJGMZSMBFJNU0WUkHOMC19fdmVyc2lvbl9flEsD
jBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jhbmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJST
lCmBlH2UKIwGdmFsdWVzlH2UKIwPY2xhc3Nfc2VsZWN0aW9ulIwBMZRK/////4aUjAxmb2xkX2Zl
YXR1cmWUTkr+////hpSMFWZvbGRfZmVhdHVyZV9zZWxlY3RlZJSJSv7///+GlGgNfZRoG0sDdYwK
YXR0cmlidXRlc5QojANhZ2WUSwKGlIwGZm5sd2d0lEsChpSMDWVkdWNhdGlvbi1udW2USwKGlIwM
Y2FwaXRhbC1nYWlulEsChpSMDGNhcGl0YWwtbG9zc5RLAoaUjA5ob3Vycy1wZXItd2Vla5RLAoaU
jAl3b3JrY2xhc3OUSwGGlIwJZWR1Y2F0aW9ulEsBhpSMDm1hcml0YWwtc3RhdHVzlEsBhpSMCm9j
Y3VwYXRpb26USwGGlIwMcmVsYXRpb25zaGlwlEsBhpSMBHJhY2WUSwGGlIwDc2V4lEsBhpSMDm5h
dGl2ZS1jb3VudHJ5lEsBhpR0lIwFbWV0YXOUjAZyb3dfaWSUSwOGlIWUjApjbGFzc192YXJzlIwG
VGFyZ2V0lEsBhpSFlHViaCApgZR9lChoI32UKIwPY2xhc3Nfc2VsZWN0aW9ulIwhKE5vbmUsIHNo
b3cgYXZlcmFnZSBvdmVyIGNsYXNzZXMplEr/////hpSMDGZvbGRfZmVhdHVyZZROSv7///+GlIwV
Zm9sZF9mZWF0dXJlX3NlbGVjdGVklIlK/v///4aUjAtzY29yZV90YWJsZZR9lGgbSwN1aC0ojANh
Z2WUSwKGlIwGZm5sd2d0lEsChpSMDWVkdWNhdGlvbi1udW2USwKGlIwMY2FwaXRhbC1nYWlulEsC
hpSMDGNhcGl0YWwtbG9zc5RLAoaUjA5ob3Vycy1wZXItd2Vla5RLAoaUjAl3b3JrY2xhc3OUSwGG
lIwJZWR1Y2F0aW9ulEsBhpSMDm1hcml0YWwtc3RhdHVzlEsBhpSMCm9jY3VwYXRpb26USwGGlIwM
cmVsYXRpb25zaGlwlEsBhpSMBHJhY2WUSwGGlIwDc2V4lEsBhpSMDm5hdGl2ZS1jb3VudHJ5lEsB
hpR0lGhLKWhPjAZUYXJnZXSUSwGGlIWUdWJoICmBlH2UKGgjfZQojA9jbGFzc19zZWxlY3Rpb26U
jCEoTm9uZSwgc2hvdyBhdmVyYWdlIG92ZXIgY2xhc3NlcymUSv////+GlIwMZm9sZF9mZWF0dXJl
lE5K/v///4aUjBVmb2xkX2ZlYXR1cmVfc2VsZWN0ZWSUiUr+////hpSMC3Njb3JlX3RhYmxllH2U
aBtLA3VoLShoX0sChpRoYUsChpRoY0sChpRoZUsChpRoZ0sChpRoaUsChpRoa0sBhpRobUsBhpRo
b0sBhpRocUsBhpRoc0sBhpRodUsBhpRod0sBhpRoeUsBhpR0lGhLKWhPaHxLAoaUhZR1YmggKYGU
fZQojAR0aW1llEdB1qcWMYURYmgjfZQoaIJog0r/////hpRohU5K/v///4aUaIeJSv7///+GlGiJ
fZRoG0sDdWgtKIwMc2VwYWwgbGVuZ3RolEsChpSMC3NlcGFsIHdpZHRolEsChpSMDHBldGFsIGxl
bmd0aJRLAoaUjAtwZXRhbCB3aWR0aJRLAoaUdJRoSyloT4wEaXJpc5RLAYaUhZR1YmV1Lg==
</properties>
		<properties node_id="1" format="literal">{'C_index': 61, 'auto_apply': True, 'class_weight': False, 'controlAreaVisible': True, 'learner_name': 'Logistic Regression', 'penalty_type': 1, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x04v\x00\x00\x02\n\x00\x00\x05\x89\x00\x00\x03H\x00\x00\x04w\x00\x00\x02)\x00\x00\x05\x88\x00\x00\x03G\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x04w\x00\x00\x02)\x00\x00\x05\x88\x00\x00\x03G', '__version__': 2}</properties>
		<properties node_id="2" format="literal">{'auto_apply': True, 'class_weight': False, 'controlAreaVisible': True, 'index_output': 0, 'learner_name': 'Random Forest Learner', 'max_depth': 8, 'max_features': 5, 'min_samples_split': 5, 'n_estimators': 500, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\x87\x00\x00\x01?\x00\x00\x04$\x00\x00\x02\xe1\x00\x00\x02\x87\x00\x00\x01[\x00\x00\x04$\x00\x00\x02\xe1\x00\x00\x00\x00\x02\x00\x00\x00\x06\xc0\x00\x00\x02\x87\x00\x00\x01[\x00\x00\x04$\x00\x00\x02\xe1', 'use_max_depth': True, 'use_max_features': False, 'use_min_samples_split': True, 'use_random_state': True, '__version__': 1}</properties>
		<properties node_id="3" format="literal">{'C': 1.0, 'auto_apply': True, 'coef0': 0.0, 'controlAreaVisible': True, 'degree': 3, 'epsilon': 0.1, 'gamma': 0.0, 'kernel_type': 0, 'learner_name': 'SVM Learner', 'limit_iter': True, 'max_iter': 500, 'nu': 0.5, 'nu_C': 1.0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xae\x00\x00\x00\xfa\x00\x00\x03\xfd\x00\x00\x03%\x00\x00\x02\xae\x00\x00\x01\x16\x00\x00\x03\xfd\x00\x00\x03%\x00\x00\x00\x00\x02\x00\x00\x00\x06\xc0\x00\x00\x02\xae\x00\x00\x01\x16\x00\x00\x03\xfd\x00\x00\x03%', 'svm_type': 0, 'tol': 0.001, '__version__': 1}</properties>
		<properties node_id="4" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03p\x00\x00\x01\xa2\x00\x00\t\n\x00\x00\x04\x92\x00\x00\x03p\x00\x00\x01\xbe\x00\x00\t\n\x00\x00\x04\x92\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03p\x00\x00\x01\xbe\x00\x00\t\n\x00\x00\x04\x92', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="5" format="pickle">gASVzwEAAAAAAAB9lCiMEmFwcGVuZF9wcmVkaWN0aW9uc5SIjBRhcHBlbmRfcHJvYmFiaWxpdGll
c5SIjAphdXRvY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21l
dHJ5lENCAdnQywADAAAAAAH9AAABFAAABMIAAAMPAAAB/QAAATAAAATCAAADDwAAAAAAAAAABsAA
AAH9AAABMAAABMIAAAMPlIwQc2VsZWN0ZWRfbGVhcm5lcpRdlEsJYYwRc2VsZWN0ZWRfcXVhbnRp
dHmUSwKMC19fdmVyc2lvbl9flEsBjBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jhbmdld2lkZ2V0
LnNldHRpbmdzlIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwJc2VsZWN0aW9ulI+UaApL
AXWMB2NsYXNzZXOUjAEwlIwBMZSGlHViaA8pgZR9lChoFl2UKIwLSXJpcy1zZXRvc2GUjA9Jcmlz
LXZlcnNpY29sb3KUjA5JcmlzLXZpcmdpbmljYZRljAR0aW1llEdB1qcWMahS42gSfZQojAlzZWxl
Y3Rpb26Uj5RoCksBdXViZXUu
</properties>
		<properties node_id="6" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02O\x00\x00\x01\xac\x00\x00\x07e\x00\x00\x05o\x00\x00\x02O\x00\x00\x01\xc8\x00\x00\x07e\x00\x00\x05o\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x02O\x00\x00\x01\xc8\x00\x00\x07e\x00\x00\x05o', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import pandas as pd\nimport Orange\n\nimport numpy as np\nimport pyarrow.parquet as pq\n\n\n# var_path_data = "C:\\\\Users\\\\a123456\\\\knime-workspace\\\\orange\\\\orange_machine_learning\\\\"\nvar_path_data = "/Users/m_lauber/Dropbox/knime-workspace/orange/orange_machine_learning/"\ndf = pq.read_table(var_path_data + "train.parquet").to_pandas()\n\nfeatures = [feat for feat in df.columns]\n\nnum_cols = df[features].select_dtypes(include=\'number\').columns.tolist()\ncat_cols = df[features].select_dtypes(exclude=\'number\').columns.tolist()\n\ndf[cat_cols] = df[cat_cols].astype(str)\n\nprint(df.head())\n\ndef pandas_to_orange(df):\n    # Preprocess the date column\n    for col in df.columns:\n        if df[col].dtype == "datetime64[ns]":\n            df[col] = df[col].astype(str)\n\n    # Determine variable types\n    def get_variable(col):\n        if np.issubdtype(df[col].dtype, np.number):\n            return Orange.data.ContinuousVariable(col)\n        elif df[col].dtype == np.dtype(\'O\'):\n            if df[col].apply(lambda x: isinstance(x, str)).all():\n                return Orange.data.StringVariable(col)\n            else:\n                return Orange.data.DiscreteVariable(col, values=df[col].unique().tolist())\n        else:\n            raise ValueError(f"Unsupported dtype {df[col].dtype} for column {col}")\n\n    feature_vars = [get_variable(col) for col in df.columns if not isinstance(get_variable(col), Orange.data.StringVariable)]\n    meta_vars = [get_variable(col) for col in df.columns if isinstance(get_variable(col), Orange.data.StringVariable)]\n\n    domain = Orange.data.Domain(feature_vars, metas=meta_vars)\n\n    # Convert non-string columns to a NumPy array\n    non_string_data = df.select_dtypes(exclude=\'object\').values\n    string_data = df.select_dtypes(include=\'object\').astype(str).values\n\n    # Create a table for non-string columns\n    table = Orange.data.Table.from_numpy(domain, X=non_string_data, metas=string_data)\n\n    return table\n\n\n# Convert the pandas DataFrame to an Orange Table\nout_data = pandas_to_orange(df)\n\n# print(type(out_table))\n\n# Now you can use the out_table with Orange3\n', 'filename': None}], 'scriptText': 'import pandas as pd\nimport Orange\n\nimport numpy as np\nimport pyarrow.parquet as pq\n\n\n# var_path_data = "C:\\\\Users\\\\a123456\\\\knime-workspace\\\\orange\\\\orange_machine_learning\\\\"\nvar_path_data = "/Users/m_lauber/Dropbox/knime-workspace/orange/orange_machine_learning/"\ndf = pq.read_table(var_path_data + "train.parquet").to_pandas()\n\nfeatures = [feat for feat in df.columns]\n\nnum_cols = df[features].select_dtypes(include=\'number\').columns.tolist()\ncat_cols = df[features].select_dtypes(exclude=\'number\').columns.tolist()\n\ndf[cat_cols] = df[cat_cols].astype(str)\n\nprint(df.head())\n\ndef pandas_to_orange(df):\n    # Preprocess the date column\n    for col in df.columns:\n        if df[col].dtype == "datetime64[ns]":\n            df[col] = df[col].astype(str)\n\n    # Determine variable types\n    def get_variable(col):\n        if np.issubdtype(df[col].dtype, np.number):\n            return Orange.data.ContinuousVariable(col)\n        elif df[col].dtype == np.dtype(\'O\'):\n            if df[col].apply(lambda x: isinstance(x, str)).all():\n                return Orange.data.StringVariable(col)\n            else:\n                return Orange.data.DiscreteVariable(col, values=df[col].unique().tolist())\n        else:\n            raise ValueError(f"Unsupported dtype {df[col].dtype} for column {col}")\n\n    feature_vars = [get_variable(col) for col in df.columns if not isinstance(get_variable(col), Orange.data.StringVariable)]\n    meta_vars = [get_variable(col) for col in df.columns if isinstance(get_variable(col), Orange.data.StringVariable)]\n\n    domain = Orange.data.Domain(feature_vars, metas=meta_vars)\n\n    # Convert non-string columns to a NumPy array\n    non_string_data = df.select_dtypes(exclude=\'object\').values\n    string_data = df.select_dtypes(include=\'object\').astype(str).values\n\n    # Create a table for non-string columns\n    table = Orange.data.Table.from_numpy(domain, X=non_string_data, metas=string_data)\n\n    return table\n\n\n# Convert the pandas DataFrame to an Orange Table\nout_data = pandas_to_orange(df)\n\n# print(type(out_table))\n\n# Now you can use the out_table with Orange3\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xab\x00\x00\x00k\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="7" format="pickle">gASVZQcAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlIiME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAABCMAAALD
AAAGogAABL4AAAQjAAAC3wAABqIAAAS+AAAAAAAAAAAKAAAABCMAAALfAAAGogAABL6UjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMA2FnZZRLAoaUjAlhdHRyaWJ1dGWUSwCGlIwGZm5sd2d0lEsChpRo
FUsBhpSMDWVkdWNhdGlvbi1udW2USwKGlGgVSwKGlIwMY2FwaXRhbC1nYWlulEsChpRoFUsDhpSM
DGNhcGl0YWwtbG9zc5RLAoaUaBVLBIaUjA5ob3Vycy1wZXItd2Vla5RLAoaUaBVLBYaUjAl3b3Jr
Y2xhc3OUSwGGlGgVSwaGlIwJZWR1Y2F0aW9ulEsBhpRoFUsHhpSMDm1hcml0YWwtc3RhdHVzlEsB
hpRoFUsIhpSMCm9jY3VwYXRpb26USwGGlGgVSwmGlIwMcmVsYXRpb25zaGlwlEsBhpRoFUsKhpSM
BHJhY2WUSwGGlGgVSwuGlIwDc2V4lEsBhpRoFUsMhpSMDm5hdGl2ZS1jb3VudHJ5lEsBhpRoFUsN
hpSMBlRhcmdldJRLAYaUjAVjbGFzc5RLAIaUjAZyb3dfaWSUSwOGlIwEbWV0YZRLAIaUdUr+////
hpRoB0sBdYwKYXR0cmlidXRlc5R9lCiMA2FnZZRLAowGZm5sd2d0lEsCjA1lZHVjYXRpb24tbnVt
lEsCjAxjYXBpdGFsLWdhaW6USwKMDGNhcGl0YWwtbG9zc5RLAowOaG91cnMtcGVyLXdlZWuUSwJ1
jAVtZXRhc5R9lCiMCXdvcmtjbGFzc5RLAYwJZWR1Y2F0aW9ulEsBjA5tYXJpdGFsLXN0YXR1c5RL
AYwKb2NjdXBhdGlvbpRLAYwMcmVsYXRpb25zaGlwlEsBjARyYWNllEsBjANzZXiUSwGMDm5hdGl2
ZS1jb3VudHJ5lEsBjAZUYXJnZXSUSwGMBnJvd19pZJRLA3V1YmgMKYGUfZQoaA99lCiMEWRvbWFp
bl9yb2xlX2hpbnRzlH2UKGhaSwOGlIwJYXZhaWxhYmxllEsAhpRoSUsChpSMCWF0dHJpYnV0ZZRL
AIaUaEpLAoaUaGRLAYaUaEtLAoaUaGRLAoaUaExLAoaUaGRLA4aUaE1LAoaUaGRLBIaUaE5LAoaU
aGRLBYaUaFFLAYaUaGRLBoaUaFJLAYaUaGRLB4aUaFNLAYaUaGRLCIaUaFRLAYaUaGRLCYaUaFVL
AYaUaGRLCoaUaFZLAYaUaGRLC4aUaFdLAYaUaGRLDIaUaFhLAYaUaGRLDYaUaFlLAoaUjAVjbGFz
c5RLAIaUdUr+////hpRoB0sBdWhHfZQoaElLAmhKSwJoS0sCaExLAmhNSwJoTksCdWhPfZQoaFFL
AWhSSwFoU0sBaFRLAWhVSwFoVksBaFdLAWhYSwFoWUsCaFpLA3V1YmgMKYGUfZQoaA99lChoXn2U
KGhaSwOGlGhhSwCGlGhZSwOGlGhhSwGGlGhJSwKGlGhkSwCGlGhKSwKGlGhkSwGGlGhLSwKGlGhk
SwKGlGhMSwKGlGhkSwOGlGhNSwKGlGhkSwSGlGhOSwKGlGhkSwWGlGhRSwOGlIwEbWV0YZRLAIaU
aFJLA4aUaJtLAYaUaFNLA4aUaJtLAoaUaFRLA4aUaJtLA4aUaFVLA4aUaJtLBIaUaFZLA4aUaJtL
BYaUaFdLA4aUaJtLBoaUaFhLA4aUaJtLB4aUdUr+////hpRoB0sBdWhHfZQoaElLAmhKSwJoS0sC
aExLAmhNSwJoTksCdWhPfZQoaFFLA2hSSwNoU0sDaFRLA2hVSwNoVksDaFdLA2hYSwNoWUsDaFpL
A3V1YmgMKYGUfZQoaA99lChoXn2UKGhZSwOGlGhhSwCGlGhJSwKGlGhkSwCGlGhKSwKGlGhkSwGG
lGhLSwKGlGhkSwKGlGhMSwKGlGhkSwOGlGhNSwKGlGhkSwSGlGhOSwKGlGhkSwWGlGhaSwGGlGhk
SwaGlGhRSwOGlGibSwCGlGhSSwOGlGibSwGGlGhTSwOGlGibSwKGlGhUSwOGlGibSwOGlGhVSwOG
lGibSwSGlGhWSwOGlGibSwWGlGhXSwOGlGibSwaGlGhYSwOGlGibSweGlHVK/v///4aUaAdLAXVo
R32UKGhJSwJoSksCaEtLAmhMSwJoTUsCaE5LAnVoT32UKGhRSwNoUksDaFNLA2hUSwNoVUsDaFZL
A2hXSwNoWEsDaFlLA2haSwF1dWJldS4=
</properties>
		<properties node_id="8" format="pickle">gASViAMAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5
lENCAdnQywADAAAAAANPAAACxQAABc4AAATAAAADTwAAAuEAAAXOAAAEwAAAAAAAAAAACgAAAANP
AAAC4QAABc4AAATAlIwLX192ZXJzaW9uX1+USwKMEGNvbnRleHRfc2V0dGluZ3OUXZSMFW9yYW5n
ZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMFF9kb21haW5f
Y2hhbmdlX3N0b3JllH2UKIwEUmVhbJQojAhmZWF0dXJlM5RLA4wBZpSGlCmJdJSGlF2UKIwGQXNU
aW1llCmGlIwIU3RycFRpbWWUKIwURGV0ZWN0IGF1dG9tYXRpY2FsbHmUTksBSwF0lIaUZYwGU3Ry
aW5nlIwGcm93X2lklCmJh5SGlF2UaB2MBlRhcmdldJQpiYeUhpRdlIwNQXNDYXRlZ29yaWNhbJQp
hpRhaB2MCXdvcmtjbGFzc5QpiYeUhpRdlGgmKYaUYWgdjAllZHVjYXRpb26UKYmHlIaUXZRoJimG
lGFoHYwObWFyaXRhbC1zdGF0dXOUKYmHlIaUXZRoJimGlGFoHYwKb2NjdXBhdGlvbpQpiYeUhpRd
lGgmKYaUYWgdjAxyZWxhdGlvbnNoaXCUKYmHlIaUXZRoJimGlGFoHYwEcmFjZZQpiYeUhpRdlGgm
KYaUYWgdjANzZXiUKYmHlIaUXZRoJimGlGFoHYwObmF0aXZlLWNvdW50cnmUKYmHlIaUXZRoJimG
lGF1Sv7///+GlIwWX21lcmdlX2RpYWxvZ19zZXR0aW5nc5R9lEr8////hpSMDl9zZWxlY3RlZF9p
dGVtlIwGVGFyZ2V0lEsEhpRK/v///4aUjBFvdXRwdXRfdGFibGVfbmFtZZSMCGZlYXR1cmVzlEr+
////hpRoBEsCdYwKYXR0cmlidXRlc5R9lCiMA2FnZZRLAowGZm5sd2d0lEsCjA1lZHVjYXRpb24t
bnVtlEsCjAxjYXBpdGFsLWdhaW6USwKMDGNhcGl0YWwtbG9zc5RLAowOaG91cnMtcGVyLXdlZWuU
SwJ1jAVtZXRhc5R9lChoKEsDaC1LA2gySwNoN0sDaDxLA2hBSwNoRksDaEtLA2giSwNoHksDdXVi
YXUu
</properties>
		<properties node_id="9" format="pickle">gASVBQIAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIxXL1VzZXJzL21fbGF1YmVyL0Ryb3Bib3gva25pbWUtd29ya3NwYWNlL29yYW5nZS9vcmFu
Z2VfbWFjaGluZV9sZWFybmluZy9iZXN0X21vZGVsLnBrY2xzlIwGcHJlZml4lIwHYmFzZWRpcpSM
B3JlbHBhdGiUjBBiZXN0X21vZGVsLnBrY2xzlIwFdGl0bGWUjACUjAVzaGVldJRoEIwLZmlsZV9m
b3JtYXSUTnViaAYpgZR9lChoCYxQL1VzZXJzL21fbGF1YmVyL0Ryb3Bib3gva25pbWUtd29ya3Nw
YWNlL29yYW5nZS9vcmFuZ2VfbWFjaGluZV9sZWFybmluZy9hZGEucGtjbHOUaAtoDGgNjAlhZGEu
cGtjbHOUaA9oEGgRaBBoEk51YmWME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAAiAA
AAKVAAAEKAAAAxkAAAIgAAACsQAABCgAAAMZAAAAAAAAAAAGwAAAAiAAAAKxAAAEKAAAAxmUjAtf
X3ZlcnNpb25fX5RLAXUu
</properties>
		<properties node_id="10" format="literal">{'algorithm_index': 1, 'auto_apply': True, 'controlAreaVisible': True, 'learner_name': '', 'learning_rate': 1.0, 'loss_index': 0, 'n_estimators': 50, 'random_seed': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02 \x00\x00\x01r\x00\x00\x03n\x00\x00\x03\x19\x00\x00\x02 \x00\x00\x01\x8e\x00\x00\x03n\x00\x00\x03\x19\x00\x00\x00\x00\x00\x00\x00\x00\x06\xc0\x00\x00\x02 \x00\x00\x01\x8e\x00\x00\x03n\x00\x00\x03\x19', 'use_random_seed': False, '__version__': 1}</properties>
		<properties node_id="11" format="literal">{'auto_save': True, 'controlAreaVisible': True, 'filter': 'Pickled model (*.pkcls)', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc0\x00\x00\x03/\x00\x00\x05\x11\x00\x00\x03\xb4\x00\x00\x03\xc0\x00\x00\x03K\x00\x00\x05\x11\x00\x00\x03\xb4\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xc0\x00\x00\x03K\x00\x00\x05\x11\x00\x00\x03\xb4', 'stored_name': 'best_model.pkcls', 'stored_path': '.', '__version__': 1}</properties>
		<properties node_id="12" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xad\x00\x00\x01\xbb\x00\x00\x085\x00\x00\x04\x9d\x00\x00\x03\xad\x00\x00\x01\xd7\x00\x00\x085\x00\x00\x04\x9d\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xad\x00\x00\x01\xd7\x00\x00\x085\x00\x00\x04\x9d', 'scriptLibrary': [{'name': 'Table from numpy', 'script': 'import pandas as pd\nimport Orange\n\nimport numpy as np\nimport pyarrow.parquet as pq\n\n\n# var_path_data = "C:\\\\Users\\\\a123456\\\\knime-workspace\\\\orange\\\\orange_machine_learning\\\\"\nvar_path_data = "/Users/m_lauber/Dropbox/knime-workspace/orange/orange_machine_learning/"\ndf = pq.read_table(var_path_data + "test.parquet").to_pandas()\n\nfeatures = [feat for feat in df.columns]\n\nnum_cols = df[features].select_dtypes(include=\'number\').columns.tolist()\ncat_cols = df[features].select_dtypes(exclude=\'number\').columns.tolist()\n\ndf[cat_cols] = df[cat_cols].astype(str)\n\nprint(df.head())\n\ndef pandas_to_orange(df):\n    # Preprocess the date column\n    for col in df.columns:\n        if df[col].dtype == "datetime64[ns]":\n            df[col] = df[col].astype(str)\n\n    # Determine variable types\n    def get_variable(col):\n        if np.issubdtype(df[col].dtype, np.number):\n            return Orange.data.ContinuousVariable(col)\n        elif df[col].dtype == np.dtype(\'O\'):\n            if df[col].apply(lambda x: isinstance(x, str)).all():\n                return Orange.data.StringVariable(col)\n            else:\n                return Orange.data.DiscreteVariable(col, values=df[col].unique().tolist())\n        else:\n            raise ValueError(f"Unsupported dtype {df[col].dtype} for column {col}")\n\n    feature_vars = [get_variable(col) for col in df.columns if not isinstance(get_variable(col), Orange.data.StringVariable)]\n    meta_vars = [get_variable(col) for col in df.columns if isinstance(get_variable(col), Orange.data.StringVariable)]\n\n    domain = Orange.data.Domain(feature_vars, metas=meta_vars)\n\n    # Convert non-string columns to a NumPy array\n    non_string_data = df.select_dtypes(exclude=\'object\').values\n    string_data = df.select_dtypes(include=\'object\').astype(str).values\n\n    # Create a table for non-string columns\n    table = Orange.data.Table.from_numpy(domain, X=non_string_data, metas=string_data)\n\n    return table\n\n\n# Convert the pandas DataFrame to an Orange Table\nout_data = pandas_to_orange(df)\n\n# print(type(out_table))\n\n# Now you can use the out_table with Orange3\n', 'filename': None}], 'scriptText': 'import pandas as pd\nimport Orange\n\nimport numpy as np\nimport pyarrow.parquet as pq\n\n\n# var_path_data = "C:\\\\Users\\\\a123456\\\\knime-workspace\\\\orange\\\\orange_machine_learning\\\\"\nvar_path_data = "/Users/m_lauber/Dropbox/knime-workspace/orange/orange_machine_learning/"\ndf = pq.read_table(var_path_data + "test.parquet").to_pandas()\n\nfeatures = [feat for feat in df.columns]\n\nnum_cols = df[features].select_dtypes(include=\'number\').columns.tolist()\ncat_cols = df[features].select_dtypes(exclude=\'number\').columns.tolist()\n\ndf[cat_cols] = df[cat_cols].astype(str)\n\nprint(df.head())\n\ndef pandas_to_orange(df):\n    # Preprocess the date column\n    for col in df.columns:\n        if df[col].dtype == "datetime64[ns]":\n            df[col] = df[col].astype(str)\n\n    # Determine variable types\n    def get_variable(col):\n        if np.issubdtype(df[col].dtype, np.number):\n            return Orange.data.ContinuousVariable(col)\n        elif df[col].dtype == np.dtype(\'O\'):\n            if df[col].apply(lambda x: isinstance(x, str)).all():\n                return Orange.data.StringVariable(col)\n            else:\n                return Orange.data.DiscreteVariable(col, values=df[col].unique().tolist())\n        else:\n            raise ValueError(f"Unsupported dtype {df[col].dtype} for column {col}")\n\n    feature_vars = [get_variable(col) for col in df.columns if not isinstance(get_variable(col), Orange.data.StringVariable)]\n    meta_vars = [get_variable(col) for col in df.columns if isinstance(get_variable(col), Orange.data.StringVariable)]\n\n    domain = Orange.data.Domain(feature_vars, metas=meta_vars)\n\n    # Convert non-string columns to a NumPy array\n    non_string_data = df.select_dtypes(exclude=\'object\').values\n    string_data = df.select_dtypes(include=\'object\').astype(str).values\n\n    # Create a table for non-string columns\n    table = Orange.data.Table.from_numpy(domain, X=non_string_data, metas=string_data)\n\n    return table\n\n\n# Convert the pandas DataFrame to an Orange Table\nout_data = pandas_to_orange(df)\n\n# print(type(out_table))\n\n# Now you can use the out_table with Orange3\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xab\x00\x00\x00k\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="13" format="literal">{'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc0\x00\x00\x02\xfa\x00\x00\x05g\x00\x00\x03\xb4\x00\x00\x03\xc0\x00\x00\x03\x16\x00\x00\x05g\x00\x00\x03\xb4\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xc0\x00\x00\x03\x16\x00\x00\x05g\x00\x00\x03\xb4', '__version__': 1}</properties>
		<properties node_id="14" format="pickle">gASV7AQAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBRkaXNwbGF5X2NvbnZleF9jdXJ2
ZZSJjBNkaXNwbGF5X2NvbnZleF9odWxslImMFWRpc3BsYXlfZGVmX3RocmVzaG9sZJSIjBFkaXNw
bGF5X3BlcmZfbGluZZSIjAdmbl9jb3N0lE30AYwHZnBfY29zdJRN9AGMDXJvY19hdmVyYWdpbmeU
SwCME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAAWQAAAEuAAAGvwAABC0AAAFkAAAB
SgAABr8AAAQtAAAAAAAAAAAGwAAAAWQAAAFKAAAGvwAABC2UjAx0YXJnZXRfcHJpb3KUjBVudW1w
eS5jb3JlLm11bHRpYXJyYXmUjAZzY2FsYXKUk5SMBW51bXB5lIwFZHR5cGWUk5SMAmY4lImIh5RS
lChLA4wBPJROTk5K/////0r/////SwB0lGJDCAAAAAAAAFNAlIaUUpSMC19fdmVyc2lvbl9flEsB
jBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jhbmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJST
lCmBlH2UKIwGdmFsdWVzlH2UKIwUc2VsZWN0ZWRfY2xhc3NpZmllcnOUXZQoSwBLAUsCSwNLBEsF
SwZLB0sISwlljAx0YXJnZXRfaW5kZXiUSwBoGksBdYwHY2xhc3Nlc5SMATCUjAExlIaUjBBjbGFz
c2lmaWVyX25hbWVzlF2UKIwTTG9naXN0aWMgUmVncmVzc2lvbpSMFVJhbmRvbSBGb3Jlc3QgTGVh
cm5lcpSMC1NWTSBMZWFybmVylIwIQWRhQm9vc3SUjBFHcmFkaWVudCBCb29zdGluZ5SMDk5ldXJh
bCBOZXR3b3JrlIwDU0dElIwLTmFpdmUgQmF5ZXOUjAdYR0Jvb3N0lIwIQ2F0Qm9vc3SUZXViaB8p
gZR9lChoIn2UKIwUc2VsZWN0ZWRfY2xhc3NpZmllcnOUXZQoSwBLAUsCSwNLBEsFSwZLB2WMDHRh
cmdldF9pbmRleJRLAGgaSwF1aCdoKGgphpRoK12UKIwTTG9naXN0aWMgUmVncmVzc2lvbpSMFVJh
bmRvbSBGb3Jlc3QgTGVhcm5lcpSMC1NWTSBMZWFybmVylIwIQWRhQm9vc3SUjBFHcmFkaWVudCBC
b29zdGluZ5SMDk5ldXJhbCBOZXR3b3JrlIwDU0dElIwLTmFpdmUgQmF5ZXOUZXViaB8pgZR9lCho
In2UKGg6XZQoSwBLAUsCSwNLBEsFSwZlaDxLAGgaSwF1aCdoPWgrXZQoaD9oQGhBaEJoQ2hEaEVl
dWJoHymBlH2UKGgifZQoaDpdlChLAEsBSwJLA0sEZWg8SwBoGksBdWgnaD1oK12UKGg/aEBoQWhC
aENldWJoHymBlH2UKGgifZQoaDpdlChLAEsBSwJLA0sESwVlaDxLAGgaSwF1aCdoPWgrXZQoaD9o
QGhBaEJoQ4wHU1ZNICgxKZRldWJoHymBlH2UKGgifZQoaDpdlChLAEsBSwJLA2VoPEsAaBpLAXVo
J2g9aCtdlChoP2hAaEFoQmV1YmgfKYGUfZQoaCJ9lChoOl2UKEsASwFLAmVoPEsBaBpLAXVoJ2g9
aCtdlChoP2hAaEFldWJldS4=
</properties>
		<properties node_id="15" format="pickle">gASVWgMAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAIgAAABFAAABhkAAAQEAAACIAAAATAAAAYZAAAE
BAAAAAAAAAAABsAAAAIgAAABMAAABhkAAAQElIwHc29ydGluZ5RLAIwDc2lwlIwOX3VucGlja2xl
X2VudW2Uk5SMDFB5UXQ1LlF0Q29yZZSMCVNvcnRPcmRlcpRLAIeUUpSGlIwLX192ZXJzaW9uX1+U
SwKMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0
lJOUKYGUfZQojAZ2YWx1ZXOUfZQojAljb2xvcl92YXKUTkr+////hpSMDXNlbGVjdGVkX3ZhcnOU
XZRoDksCdYwKYXR0cmlidXRlc5R9lCiMA2FnZZRLAowGZm5sd2d0lEsCjA1lZHVjYXRpb24tbnVt
lEsCjAxjYXBpdGFsLWdhaW6USwKMDGNhcGl0YWwtbG9zc5RLAowOaG91cnMtcGVyLXdlZWuUSwKM
CXdvcmtjbGFzc5RLAYwJZWR1Y2F0aW9ulEsBjA5tYXJpdGFsLXN0YXR1c5RLAYwKb2NjdXBhdGlv
bpRLAYwMcmVsYXRpb25zaGlwlEsBjARyYWNllEsBjANzZXiUSwGMDm5hdGl2ZS1jb3VudHJ5lEsB
jAZUYXJnZXSUSwF1jAVtZXRhc5R9lIwGcm93X2lklEsDc3ViaBMpgZR9lChoFn2UKGgYTkr+////
hpRoGl2UaA5LAnVoHH2UKIwDYWdllEsCjAZmbmx3Z3SUSwKMDWVkdWNhdGlvbi1udW2USwKMDGNh
cGl0YWwtZ2FpbpRLAowMY2FwaXRhbC1sb3NzlEsCjA5ob3Vycy1wZXItd2Vla5RLAowJd29ya2Ns
YXNzlEsBjAllZHVjYXRpb26USwGMDm1hcml0YWwtc3RhdHVzlEsBjApvY2N1cGF0aW9ulEsBjAxy
ZWxhdGlvbnNoaXCUSwGMBHJhY2WUSwGMA3NleJRLAYwObmF0aXZlLWNvdW50cnmUSwGMBlRhcmdl
dJRLAXVoLX2UdWJldS4=
</properties>
		<properties node_id="16" format="literal">{'auto_apply': True, 'controlAreaVisible': True, 'learner_name': '', 'method_index': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xb6\x00\x00\x01\x18\x00\x00\x03\xf5\x00\x00\x03\x07\x00\x00\x02\xb6\x00\x00\x014\x00\x00\x03\xf5\x00\x00\x03\x07\x00\x00\x00\x00\x02\x00\x00\x00\x06\xc0\x00\x00\x02\xb6\x00\x00\x014\x00\x00\x03\xf5\x00\x00\x03\x07', 'catgb_editor': {'colsample_bylevel': 1, 'lambda_index': 55, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 100, 'random_state': True}, 'gb_editor': {'learning_rate': 0.05, 'max_depth': 6, 'min_samples_split': 10, 'n_estimators': 500, 'random_state': True, 'subsample': 1}, 'xgb_editor': {'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'lambda_index': 53, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 100, 'random_state': True, 'subsample': 1}, 'xgbrf_editor': {'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'lambda_index': 53, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 100, 'random_state': True, 'subsample': 1}, '__version__': 1}</properties>
		<properties node_id="17" format="literal">{'auto_apply': True, 'controlAreaVisible': True, 'learner_name': 'Stack', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xe2\x00\x00\x01\xc2\x00\x00\x03\xc9\x00\x00\x02]\x00\x00\x02\xe2\x00\x00\x01\xde\x00\x00\x03\xc9\x00\x00\x02]\x00\x00\x00\x00\x02\x00\x00\x00\x06\xc0\x00\x00\x02\xe2\x00\x00\x01\xde\x00\x00\x03\xc9\x00\x00\x02]', '__version__': 1}</properties>
		<properties node_id="18" format="literal">{'activation_index': 3, 'alpha_index': 1, 'auto_apply': True, 'controlAreaVisible': True, 'hidden_layers_input': '100,', 'learner_name': 'Neural Network', 'max_iterations': 200, 'replicable': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xad\x00\x00\x01V\x00\x00\x03\xff\x00\x00\x02\xc9\x00\x00\x02\xad\x00\x00\x01r\x00\x00\x03\xff\x00\x00\x02\xc9\x00\x00\x00\x00\x02\x00\x00\x00\x06\xc0\x00\x00\x02\xad\x00\x00\x01r\x00\x00\x03\xff\x00\x00\x02\xc9', 'solver_index': 2, '__version__': 2}</properties>
		<properties node_id="19" format="literal">{'alpha': 1e-05, 'auto_apply': True, 'cls_epsilon': 0.1, 'cls_loss_function_index': 0, 'controlAreaVisible': True, 'eta0': 0.01, 'l1_ratio': 0.15, 'learner_name': 'SGD', 'learning_rate_index': 1, 'max_iter': 1000, 'penalty_index': 2, 'power_t': 0.25, 'random_state': 0, 'reg_epsilon': 0.1, 'reg_loss_function_index': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\x1b\x00\x00\x01%\x00\x00\x04\x91\x00\x00\x02\xfa\x00\x00\x02\x1b\x00\x00\x01A\x00\x00\x04\x91\x00\x00\x02\xfa\x00\x00\x00\x00\x02\x00\x00\x00\x06\xc0\x00\x00\x02\x1b\x00\x00\x01A\x00\x00\x04\x91\x00\x00\x02\xfa', 'shuffle': True, 'tol': 0.001, 'tol_enabled': True, 'use_random_state': False, '__version__': 2}</properties>
		<properties node_id="20" format="pickle">gASVmwMAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjApjdXJ2
ZV90eXBllEsCjARyYXRllEc/4AAAAAAAAIwTc2F2ZWRXaWRnZXRHZW9tZXRyeZRDQgHZ0MsAAwAA
AAADNAAAADMAAAb6AAACaAAAAzQAAABPAAAG+gAAAmgAAAAAAAAAAAoAAAADNAAAAE8AAAb6AAAC
aJSMC3Nob3dfcG9pbnRzlIiMDnNob3dfdGhyZXNob2xklIiMD3Zpc3VhbF9zZXR0aW5nc5R9lIwL
X192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGlu
Z3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBRzZWxlY3RlZF9jbGFzc2lmaWVyc5Rd
lChLAEsBSwJLA0sESwVLBksHSwhLCWWMDHRhcmdldF9pbmRleJRLAWgLSwF1jAdjbGFzc2VzlIwB
MJSMATGUhpSMEGNsYXNzaWZpZXJfbmFtZXOUXZQojBNMb2dpc3RpYyBSZWdyZXNzaW9ulIwVUmFu
ZG9tIEZvcmVzdCBMZWFybmVylIwLU1ZNIExlYXJuZXKUjAhBZGFCb29zdJSMEUdyYWRpZW50IEJv
b3N0aW5nlIwOTmV1cmFsIE5ldHdvcmuUjANTR0SUjAtOYWl2ZSBCYXllc5SMB1hHQm9vc3SUjAhD
YXRCb29zdJRldWJoECmBlH2UKGgTfZQojBRzZWxlY3RlZF9jbGFzc2lmaWVyc5RdlChLAEsBSwJL
A0sESwVLBksHZYwMdGFyZ2V0X2luZGV4lEsBaAtLAXVoGGgZaBqGlGgcXZQojBNMb2dpc3RpYyBS
ZWdyZXNzaW9ulIwVUmFuZG9tIEZvcmVzdCBMZWFybmVylIwLU1ZNIExlYXJuZXKUjAhBZGFCb29z
dJSMEUdyYWRpZW50IEJvb3N0aW5nlIwOTmV1cmFsIE5ldHdvcmuUjANTR0SUjAtOYWl2ZSBCYXll
c5RldWJoECmBlH2UKGgTfZQoaCtdlChLAEsBSwJLA0sESwVLBmVoLUsBaAtLAXVoGGguaBxdlCho
MGgxaDJoM2g0aDVoNmV1YmgQKYGUfZQoaBN9lChoK12UKEsASwFLAksDSwRlaC1LAGgLSwF1aBho
LmgcXZQoaDBoMWgyaDNoNGV1YmV1Lg==
</properties>
		<properties node_id="21" format="pickle">gASV9gMAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjApjdXJ2
ZV90eXBllEsCjARyYXRllEc/4AAAAAAAAIwTc2F2ZWRXaWRnZXRHZW9tZXRyeZRDQgHZ0MsAAwAA
AAADwAAAAbsAAAY/AAADtgAAA8AAAAHXAAAGPwAAA7YAAAAAAAAAAAoAAAADwAAAAdcAAAY/AAAD
tpSMC3Nob3dfcG9pbnRzlIiMDnNob3dfdGhyZXNob2xklIiMD3Zpc3VhbF9zZXR0aW5nc5R9lIwL
X192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGlu
Z3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBRzZWxlY3RlZF9jbGFzc2lmaWVyc5Rd
lEsEYYwMdGFyZ2V0X2luZGV4lEsBaAtLAXWMB2NsYXNzZXOUjAEwlIwBMZSGlIwQY2xhc3NpZmll
cl9uYW1lc5RdlCiME0xvZ2lzdGljIFJlZ3Jlc3Npb26UjBVSYW5kb20gRm9yZXN0IExlYXJuZXKU
jAtTVk0gTGVhcm5lcpSMCEFkYUJvb3N0lIwRR3JhZGllbnQgQm9vc3RpbmeUjA5OZXVyYWwgTmV0
d29ya5SMA1NHRJSMC05haXZlIEJheWVzlIwHWEdCb29zdJSMCENhdEJvb3N0lGV1YmgQKYGUfZQo
aBN9lCiMFHNlbGVjdGVkX2NsYXNzaWZpZXJzlF2USwRhjAx0YXJnZXRfaW5kZXiUSwFoC0sBdWgY
aBloGoaUaBxdlCiME0xvZ2lzdGljIFJlZ3Jlc3Npb26UjBVSYW5kb20gRm9yZXN0IExlYXJuZXKU
jAtTVk0gTGVhcm5lcpSMCEFkYUJvb3N0lIwRR3JhZGllbnQgQm9vc3RpbmeUjA5OZXVyYWwgTmV0
d29ya5SMA1NHRJSMC05haXZlIEJheWVzlGV1YmgQKYGUfZQoaBN9lChoK12USwRhaC1LAWgLSwF1
aBhoGWgahpRoHF2UKIwTTG9naXN0aWMgUmVncmVzc2lvbpSMFVJhbmRvbSBGb3Jlc3QgTGVhcm5l
cpSMC1NWTSBMZWFybmVylIwIQWRhQm9vc3SUjBFHcmFkaWVudCBCb29zdGluZ5SMDk5ldXJhbCBO
ZXR3b3JrlIwDU0dElGV1YmgQKYGUfZQoaBN9lCiMFHNlbGVjdGVkX2NsYXNzaWZpZXJzlF2UKEsA
SwFLAksDSwRljAx0YXJnZXRfaW5kZXiUSwBoC0sBdWgYaDxoHF2UKGg+aD9oQGhBaEJldWJldS4=
</properties>
		<properties node_id="22" format="pickle">gASVbwIAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZlZFdpZGdldEdlb21ldHJ5
lENCAdnQywADAAAAAAYrAAADdgAACR4AAAU7AAAGKwAAA5IAAAkeAAAFOwAAAAAAAAAACgAAAAYr
AAADkgAACR4AAAU7lIwJc2VsZWN0aW9ulF2UjAtzaG93X3Njb3Jlc5SIjAtzY29yZV90YWJsZZR9
lIwMc2hvd25fc2NvcmVzlI+UKIwCUjKUjAlQcmVjaXNpb26UjANNQUWUjAJDQZSMB0MtSW5kZXiU
jANBVUOUjAZSZWNhbGyUjANNU0WUjAJGMZSMBFJNU0WUkHOMC19fdmVyc2lvbl9flEsBjBBjb250
ZXh0X3NldHRpbmdzlF2UKIwVb3Jhbmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJSTlCmBlH2U
KIwGdmFsdWVzlH2UKIwXc2hvd19wcm9iYWJpbGl0eV9lcnJvcnOUiIwPc2hvd19yZWdfZXJyb3Jz
lEsBjAtzaG93bl9wcm9ic5RLAYwMdGFyZ2V0X2NsYXNzlIwWKEF2ZXJhZ2Ugb3ZlciBjbGFzc2Vz
KZRoB32UaBVLAXWMB2NsYXNzZXOUjAEwlIwBMZSGlHViaBopgZR9lChoHX2UKIwXc2hvd19wcm9i
YWJpbGl0eV9lcnJvcnOUiIwPc2hvd19yZWdfZXJyb3JzlEsBjAtzaG93bl9wcm9ic5RLAowMdGFy
Z2V0X2NsYXNzlIwWKEF2ZXJhZ2Ugb3ZlciBjbGFzc2VzKZSMC3Njb3JlX3RhYmxllH2UaBVLAXVo
JSl1YmV1Lg==
</properties>
		<properties node_id="23" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc0\x00\x00\x01\xbb\x00\x00\x08S\x00\x00\x04\x9e\x00\x00\x03\xc0\x00\x00\x01\xd7\x00\x00\x08S\x00\x00\x04\x9e\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xc0\x00\x00\x01\xd7\x00\x00\x08S\x00\x00\x04\x9e', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
		<properties node_id="24" format="literal">{'add_type_annotations': False, 'auto_save': True, 'controlAreaVisible': True, 'filter': 'Compressed Pickled Orange data (*.pkl.gz)', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc0\x00\x00\x03\x12\x00\x00\x05\x1a\x00\x00\x03\xb4\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x05\x1a\x00\x00\x03\xb4\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x05\x1a\x00\x00\x03\xb4', 'stored_name': 'scored_data.pkl.gz', 'stored_path': '.', '__version__': 3}</properties>
		<properties node_id="25" format="pickle">gASVAwwAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlIiME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAA8AAAAG7
AAAGPwAAA7YAAAPAAAAB1wAABj8AAAO2AAAAAAAAAAAKAAAAA8AAAAHXAAAGPwAAA7aUjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMA2FnZZRLAoaUjAlhdmFpbGFibGWUSwCGlIwGZm5sd2d0lEsChpRo
FUsBhpSMDWVkdWNhdGlvbi1udW2USwKGlGgVSwKGlIwMY2FwaXRhbC1nYWlulEsChpRoFUsDhpSM
DGNhcGl0YWwtbG9zc5RLAoaUaBVLBIaUjA5ob3Vycy1wZXItd2Vla5RLAoaUaBVLBYaUjAl3b3Jr
Y2xhc3OUSwGGlGgVSwaGlIwJZWR1Y2F0aW9ulEsBhpRoFUsHhpSMDm1hcml0YWwtc3RhdHVzlEsB
hpRoFUsIhpSMCm9jY3VwYXRpb26USwGGlGgVSwmGlIwMcmVsYXRpb25zaGlwlEsBhpRoFUsKhpSM
BHJhY2WUSwGGlGgVSwuGlIwDc2V4lEsBhpRoFUsMhpSMDm5hdGl2ZS1jb3VudHJ5lEsBhpRoFUsN
hpSMBlRhcmdldJRLAYaUjAVjbGFzc5RLAIaUjAZyb3dfaWSUSwOGlIwEbWV0YZRLAIaUjB5HcmFk
aWVudCBCb29zdGluZywgdGhyZXNoPTAuNzCUSwGGlGhESwGGlIwiR3JhZGllbnQgQm9vc3Rpbmcs
IHRocmVzaD0wLjcwICgwKZRLAoaUaERLAoaUjCJHcmFkaWVudCBCb29zdGluZywgdGhyZXNoPTAu
NzAgKDEplEsChpRoREsDhpR1Sv7///+GlGgHSwF1jAphdHRyaWJ1dGVzlH2UKGgTSwJoF0sCaBpL
AmgdSwJoIEsCaCNLAmgmSwFoKUsBaCxLAWgvSwFoMksBaDVLAWg4SwFoO0sBaD5LAXWMBW1ldGFz
lH2UKGhCSwNoRksBaElLAmhMSwJ1dWJoDCmBlH2UKGgPfZQojBFkb21haW5fcm9sZV9oaW50c5R9
lCiMHkdyYWRpZW50IEJvb3N0aW5nLCB0aHJlc2g9MC43MJRLAYaUjAlhdmFpbGFibGWUSwCGlIwi
R3JhZGllbnQgQm9vc3RpbmcsIHRocmVzaD0wLjcwICgwKZRLAoaUaFtLAYaUjCJHcmFkaWVudCBC
b29zdGluZywgdGhyZXNoPTAuNzAgKDEplEsChpRoW0sChpSMA2FnZZRLAoaUjAlhdHRyaWJ1dGWU
SwCGlIwGZm5sd2d0lEsChpRoZUsBhpSMDWVkdWNhdGlvbi1udW2USwKGlGhlSwKGlIwMY2FwaXRh
bC1nYWlulEsChpRoZUsDhpSMDGNhcGl0YWwtbG9zc5RLAoaUaGVLBIaUjA5ob3Vycy1wZXItd2Vl
a5RLAoaUaGVLBYaUjAl3b3JrY2xhc3OUSwGGlGhlSwaGlIwJZWR1Y2F0aW9ulEsBhpRoZUsHhpSM
Dm1hcml0YWwtc3RhdHVzlEsBhpRoZUsIhpSMCm9jY3VwYXRpb26USwGGlGhlSwmGlIwMcmVsYXRp
b25zaGlwlEsBhpRoZUsKhpSMBHJhY2WUSwGGlGhlSwuGlIwDc2V4lEsBhpRoZUsMhpSMDm5hdGl2
ZS1jb3VudHJ5lEsBhpRoZUsNhpSMBlRhcmdldJRLAYaUjAVjbGFzc5RLAIaUdUr+////hpRoB0sB
dWhQfZQoaGNLAmhnSwJoaksCaG1LAmhwSwJoc0sCaHZLAWh5SwFofEsBaH9LAWiCSwFohUsBaIhL
AWiLSwFojksBdWhSfZQoaFlLAYwiR3JhZGllbnQgQm9vc3RpbmcsIHRocmVzaD0wLjcwICgwKZRL
AowiR3JhZGllbnQgQm9vc3RpbmcsIHRocmVzaD0wLjcwICgxKZRLAnV1YmgMKYGUfZQoaA99lCho
V32UKIwOaG91cnMtcGVyLXdlZWuUSwKGlGhbSwCGlIwDYWdllEsChpRoW0sBhpSMBmZubHdndJRL
AoaUaFtLAoaUjA1lZHVjYXRpb24tbnVtlEsChpRoW0sDhpSMDGNhcGl0YWwtZ2FpbpRLAoaUaFtL
BIaUjAxjYXBpdGFsLWxvc3OUSwKGlGhbSwWGlIwJd29ya2NsYXNzlEsDhpRoW0sGhpSMCWVkdWNh
dGlvbpRLA4aUaFtLB4aUjA5tYXJpdGFsLXN0YXR1c5RLA4aUaFtLCIaUjApvY2N1cGF0aW9ulEsD
hpRoW0sJhpSMDHJlbGF0aW9uc2hpcJRLA4aUaFtLCoaUjARyYWNllEsDhpRoW0sLhpSMA3NleJRL
A4aUaFtLDIaUjA5uYXRpdmUtY291bnRyeZRLA4aUaFtLDYaUjAZUYXJnZXSUSwOGlIwEbWV0YZRL
AIaUjAZyb3dfaWSUSwOGlGjHSwGGlGhZSwGGlGjHSwKGlIwiR3JhZGllbnQgQm9vc3RpbmcsIHRo
cmVzaD0wLjcwICgwKZRLAoaUaMdLA4aUjCJHcmFkaWVudCBCb29zdGluZywgdGhyZXNoPTAuNzAg
KDEplEsChpRox0sEhpR1Sv7///+GlGgHSwF1aFB9lCiMA2FnZZRLAowGZm5sd2d0lEsCjA1lZHVj
YXRpb24tbnVtlEsCjAxjYXBpdGFsLWdhaW6USwKMDGNhcGl0YWwtbG9zc5RLAowOaG91cnMtcGVy
LXdlZWuUSwJ1aFJ9lCiMCXdvcmtjbGFzc5RLA4wJZWR1Y2F0aW9ulEsDjA5tYXJpdGFsLXN0YXR1
c5RLA4wKb2NjdXBhdGlvbpRLA4wMcmVsYXRpb25zaGlwlEsDjARyYWNllEsDjANzZXiUSwOMDm5h
dGl2ZS1jb3VudHJ5lEsDjAZUYXJnZXSUSwOMBnJvd19pZJRLA4weR3JhZGllbnQgQm9vc3Rpbmcs
IHRocmVzaD0wLjcwlEsBjCJHcmFkaWVudCBCb29zdGluZywgdGhyZXNoPTAuNzAgKDAplEsCjCJH
cmFkaWVudCBCb29zdGluZywgdGhyZXNoPTAuNzAgKDEplEsCdXViaAwpgZR9lChoD32UKIwRZG9t
YWluX3JvbGVfaGludHOUfZQoaNtLAoaUjAlhdmFpbGFibGWUSwCGlGjaSwKGlGjwSwGGlGjWSwKG
lGjwSwKGlGjXSwKGlGjwSwOGlGjYSwKGlGjwSwSGlGjZSwKGlGjwSwWGlGjdSwOGlGjwSwaGlGje
SwOGlGjwSweGlGjfSwOGlGjwSwiGlGjgSwOGlGjwSwmGlGjhSwOGlGjwSwqGlGjiSwOGlGjwSwuG
lGjjSwOGlGjwSwyGlGjkSwOGlGjwSw2GlIweR3JhZGllbnQgQm9vc3RpbmcsIHRocmVzaD0wLjYz
lEsBhpRo8EsOhpRo5ksDhpSMBG1ldGGUSwCGlGjlSwOGlGoQAQAASwGGlIwiR3JhZGllbnQgQm9v
c3RpbmcsIHRocmVzaD0wLjYzICgxKZRLAoaUahABAABLAoaUjCJHcmFkaWVudCBCb29zdGluZywg
dGhyZXNoPTAuNjMgKDAplEsChpRqEAEAAEsDhpR1Sv7///+GlGgHSwF1aFB9lCho1ksCaNdLAmjY
SwJo2UsCaNpLAmjbSwJ1aFJ9lCho3UsDaN5LA2jfSwNo4EsDaOFLA2jiSwNo40sDaORLA2jlSwNo
5ksDjB5HcmFkaWVudCBCb29zdGluZywgdGhyZXNoPTAuNjOUSwGMIkdyYWRpZW50IEJvb3N0aW5n
LCB0aHJlc2g9MC42MyAoMCmUSwKMIkdyYWRpZW50IEJvb3N0aW5nLCB0aHJlc2g9MC42MyAoMSmU
SwJ1dWJldS4=
</properties>
		<properties node_id="26" format="literal">{'add_type_annotations': True, 'auto_save': True, 'controlAreaVisible': True, 'filter': 'Tab-separated values (*.tab)', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc0\x00\x00\x03\x12\x00\x00\x05\t\x00\x00\x03\xb4\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x05\t\x00\x00\x03\xb4\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x05\t\x00\x00\x03\xb4', 'stored_name': 'scored_data.tab', 'stored_path': '.', '__version__': 3}</properties>
		<properties node_id="27" format="literal">{'auto_apply': True, 'controlAreaVisible': True, 'learner_name': '', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02\xe2\x00\x00\x01\xc2\x00\x00\x03\xc9\x00\x00\x02]\x00\x00\x02\xe2\x00\x00\x01\xde\x00\x00\x03\xc9\x00\x00\x02]\x00\x00\x00\x00\x02\x00\x00\x00\x06\xc0\x00\x00\x02\xe2\x00\x00\x01\xde\x00\x00\x03\xc9\x00\x00\x02]', '__version__': 1}</properties>
		<properties node_id="28" format="literal">{'auto_apply': True, 'controlAreaVisible': True, 'learner_name': '', 'method_index': 1, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x04\xc9\x00\x00\x02\x16\x00\x00\x06\x0e\x00\x00\x04\x9b\x00\x00\x04\xc9\x00\x00\x022\x00\x00\x06\x0e\x00\x00\x04\x9b\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x04\xc9\x00\x00\x022\x00\x00\x06\x0e\x00\x00\x04\x9b', 'catgb_editor': {'colsample_bylevel': 1, 'lambda_index': 55, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 100, 'random_state': True}, 'gb_editor': {'learning_rate': 0.05, 'max_depth': 6, 'min_samples_split': 10, 'n_estimators': 500, 'random_state': True, 'subsample': 1}, 'xgb_editor': {'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'lambda_index': 53, 'learning_rate': 0.1, 'max_depth': 8, 'n_estimators': 500, 'random_state': True, 'subsample': 1}, 'xgbrf_editor': {'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'lambda_index': 53, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 100, 'random_state': True, 'subsample': 1}, '__version__': 1}</properties>
		<properties node_id="29" format="literal">{'auto_apply': True, 'controlAreaVisible': True, 'learner_name': '', 'method_index': 3, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02 \x00\x00\x00\x94\x00\x00\x03a\x00\x00\x02\xbc\x00\x00\x02 \x00\x00\x00\xb0\x00\x00\x03a\x00\x00\x02\xbc\x00\x00\x00\x00\x00\x00\x00\x00\x06\xc0\x00\x00\x02 \x00\x00\x00\xb0\x00\x00\x03a\x00\x00\x02\xbc', 'catgb_editor': {'colsample_bylevel': 1, 'lambda_index': 55, 'learning_rate': 0.1, 'max_depth': 8, 'n_estimators': 500, 'random_state': True}, 'gb_editor': {'learning_rate': 0.05, 'max_depth': 6, 'min_samples_split': 10, 'n_estimators': 500, 'random_state': True, 'subsample': 1}, 'xgb_editor': {'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'lambda_index': 53, 'learning_rate': 0.1, 'max_depth': 8, 'n_estimators': 500, 'random_state': True, 'subsample': 1}, 'xgbrf_editor': {'colsample_bylevel': 1, 'colsample_bynode': 1, 'colsample_bytree': 1, 'lambda_index': 53, 'learning_rate': 0.3, 'max_depth': 6, 'n_estimators': 100, 'random_state': True, 'subsample': 1}, '__version__': 1}</properties>
		<properties node_id="30" format="literal">{'add_type_annotations': True, 'auto_save': True, 'controlAreaVisible': True, 'filter': 'Compressed Pickled Orange data (*.pkl.gz)', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc0\x00\x00\x03\x12\x00\x00\x04\xea\x00\x00\x03\xb4\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x04\xea\x00\x00\x03\xb4\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x04\xea\x00\x00\x03\xb4', 'stored_name': 'train.pkl.gz', 'stored_path': '.', '__version__': 3}</properties>
		<properties node_id="31" format="literal">{'add_type_annotations': True, 'auto_save': True, 'controlAreaVisible': True, 'filter': 'Compressed Pickled Orange data (*.pkl.gz)', 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03\xc0\x00\x00\x03\x12\x00\x00\x04\xe6\x00\x00\x03\xb4\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x04\xe6\x00\x00\x03\xb4\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03\xc0\x00\x00\x03.\x00\x00\x04\xe6\x00\x00\x03\xb4', 'stored_name': 'test.pkl.gz', 'stored_path': '.', '__version__': 3}</properties>
		<properties node_id="32" format="pickle">gASV5RoAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIxTL1VzZXJzL21fbGF1YmVyL0Ryb3Bib3gva25pbWUtd29ya3NwYWNlL29yYW5nZS9vcmFu
Z2VfbWFjaGluZV9sZWFybmluZy90cmFpbi5wa2wuZ3qUjAZwcmVmaXiUjAdiYXNlZGlylIwHcmVs
cGF0aJSMDHRyYWluLnBrbC5nepSMBXRpdGxllIwAlIwFc2hlZXSUaBCMC2ZpbGVfZm9ybWF0lE51
YmgGKYGUfZQoaAmMUC9Vc2Vycy9tX2xhdWJlci9Ecm9wYm94L2tuaW1lLXdvcmtzcGFjZS9vcmFu
Z2Uvb3JhbmdlX21hY2hpbmVfbGVhcm5pbmcvdHJhaW4ucGtslGgLjAdiYXNlZGlylGgNjAl0cmFp
bi5wa2yUaA9oEGgRaBBoEowbT3JhbmdlLmRhdGEuaW8uUGlja2xlUmVhZGVylHViaAYpgZR9lCho
CYxpL29wdC9ob21lYnJldy9DYXNrcm9vbS9taW5pZm9yZ2UvYmFzZS9lbnZzL3B5X29yYW5nZS9s
aWIvcHl0aG9uMy45L3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2lyaXMudGFilGgLjA9z
YW1wbGUtZGF0YXNldHOUaA2MCGlyaXMudGFilGgPaBBoEWgQaBKMG09yYW5nZS5kYXRhLmlvLlBp
Y2tsZVJlYWRlcpR1YmWMC3JlY2VudF91cmxzlF2UjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQ
ywADAAAAAAPAAAABcwAABj8AAAP/AAADwAAAAY8AAAY/AAAD/wAAAAAAAAAACgAAAAPAAAABjwAA
Bj8AAAP/lIwLc2hlZXRfbmFtZXOUfZSMBnNvdXJjZZRLAIwDdXJslGgQjA1kb21haW5fZWRpdG9y
lH2UjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdpZGdldC5z
ZXR0aW5nc5SMB0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCXZhcmlhYmxlc5RdlGgnfZRo
M12UKF2UKIwDYWdllIwUT3JhbmdlLmRhdGEudmFyaWFibGWUjBJDb250aW51b3VzVmFyaWFibGWU
k5RLAGgQiGVdlCiMBmZubHdndJRoO0sAaBCIZV2UKIwNZWR1Y2F0aW9uLW51bZRoO0sAaBCIZV2U
KIwMY2FwaXRhbC1nYWlulGg7SwBoEIhlXZQojAxjYXBpdGFsLWxvc3OUaDtLAGgQiGVdlCiMDmhv
dXJzLXBlci13ZWVrlGg7SwBoEIhlXZQojAl3b3JrY2xhc3OUaDmMEERpc2NyZXRlVmFyaWFibGWU
k5RLAIxrRmVkZXJhbC1nb3YsIExvY2FsLWdvdiwgTmV2ZXItd29ya2VkLCBOb25lLCBQcml2YXRl
LCBTZWxmLWVtcC1pbmMsIFNlbGYtZW1wLW5vdC1pbmMsIFN0YXRlLWdvdiwgV2l0aG91dC1wYXmU
iWVdlCiMCWVkdWNhdGlvbpRoSUsAjJUxMHRoLCAxMXRoLCAxMnRoLCAxc3QtNHRoLCA1dGgtNnRo
LCA3dGgtOHRoLCA5dGgsIEFzc29jLWFjZG0sIEFzc29jLXZvYywgQmFjaGVsb3JzLCBEb2N0b3Jh
dGUsIEhTLWdyYWQsIE1hc3RlcnMsIFByZXNjaG9vbCwgUHJvZi1zY2hvb2wsIFNvbWUtY29sbGVn
ZZSJZV2UKIwObWFyaXRhbC1zdGF0dXOUaElLAIxpRGl2b3JjZWQsIE1hcnJpZWQtQUYtc3BvdXNl
LCBNYXJyaWVkLWNpdi1zcG91c2UsIE1hcnJpZWQtc3BvdXNlLWFic2VudCwgTmV2ZXItbWFycmll
ZCwgU2VwYXJhdGVkLCBXaWRvd2VklIllXZQojApvY2N1cGF0aW9ulGhJSwCM3kFkbS1jbGVyaWNh
bCwgQXJtZWQtRm9yY2VzLCBDcmFmdC1yZXBhaXIsIEV4ZWMtbWFuYWdlcmlhbCwgRmFybWluZy1m
aXNoaW5nLCBIYW5kbGVycy1jbGVhbmVycywgTWFjaGluZS1vcC1pbnNwY3QsIE5vbmUsIE90aGVy
LXNlcnZpY2UsIFByaXYtaG91c2Utc2VydiwgUHJvZi1zcGVjaWFsdHksIFByb3RlY3RpdmUtc2Vy
diwgU2FsZXMsIFRlY2gtc3VwcG9ydCwgVHJhbnNwb3J0LW1vdmluZ5SJZV2UKIwMcmVsYXRpb25z
aGlwlGhJSwCMQkh1c2JhbmQsIE5vdC1pbi1mYW1pbHksIE90aGVyLXJlbGF0aXZlLCBPd24tY2hp
bGQsIFVubWFycmllZCwgV2lmZZSJZV2UKIwEcmFjZZRoSUsAjDtBbWVyLUluZGlhbi1Fc2tpbW8s
IEFzaWFuLVBhYy1Jc2xhbmRlciwgQmxhY2ssIE90aGVyLCBXaGl0ZZSJZV2UKIwDc2V4lGhJSwCM
DEZlbWFsZSwgTWFsZZSJZV2UKIwObmF0aXZlLWNvdW50cnmUaElLAIzEQ2FtYm9kaWEsIENhbmFk
YSwgQ2hpbmEsIENvbHVtYmlhLCBDdWJhLCBEb21pbmljYW4tUmVwdWJsaWMsIEVjdWFkb3IsIEVs
LVNhbHZhZG9yLCBFbmdsYW5kLCBGcmFuY2UsIEdlcm1hbnksIEdyZWVjZSwgR3VhdGVtYWxhLCBI
YWl0aSwgSG9sYW5kLU5ldGhlcmxhbmRzLCBIb25kdXJhcywgSG9uZywgSHVuZ2FyeSwgSW5kaWEs
IElyYW4sIC4uLpSJZV2UKIwGVGFyZ2V0lGhJSwGMBDAsIDGUiGVdlCiMBnJvd19pZJRoOYwOU3Ry
aW5nVmFyaWFibGWUk5RLAmgQiWVlc2gpSwF1jAphdHRyaWJ1dGVzlChoOEsChpRoPUsChpRoP0sC
hpRoQUsChpRoQ0sChpRoRUsChpRoR12UKIwLRmVkZXJhbC1nb3aUjAlMb2NhbC1nb3aUjAxOZXZl
ci13b3JrZWSUjAROb25llIwHUHJpdmF0ZZSMDFNlbGYtZW1wLWluY5SMEFNlbGYtZW1wLW5vdC1p
bmOUjAlTdGF0ZS1nb3aUjAtXaXRob3V0LXBheZRlhpRoTF2UKIwEMTB0aJSMBDExdGiUjAQxMnRo
lIwHMXN0LTR0aJSMBzV0aC02dGiUjAc3dGgtOHRolIwDOXRolIwKQXNzb2MtYWNkbZSMCUFzc29j
LXZvY5SMCUJhY2hlbG9yc5SMCURvY3RvcmF0ZZSMB0hTLWdyYWSUjAdNYXN0ZXJzlIwJUHJlc2No
b29slIwLUHJvZi1zY2hvb2yUjAxTb21lLWNvbGxlZ2WUZYaUaE9dlCiMCERpdm9yY2VklIwRTWFy
cmllZC1BRi1zcG91c2WUjBJNYXJyaWVkLWNpdi1zcG91c2WUjBVNYXJyaWVkLXNwb3VzZS1hYnNl
bnSUjA1OZXZlci1tYXJyaWVklIwJU2VwYXJhdGVklIwHV2lkb3dlZJRlhpRoUl2UKIwMQWRtLWNs
ZXJpY2FslIwMQXJtZWQtRm9yY2VzlIwMQ3JhZnQtcmVwYWlylIwPRXhlYy1tYW5hZ2VyaWFslIwP
RmFybWluZy1maXNoaW5nlIwRSGFuZGxlcnMtY2xlYW5lcnOUjBFNYWNoaW5lLW9wLWluc3BjdJSM
BE5vbmWUjA1PdGhlci1zZXJ2aWNllIwPUHJpdi1ob3VzZS1zZXJ2lIwOUHJvZi1zcGVjaWFsdHmU
jA9Qcm90ZWN0aXZlLXNlcnaUjAVTYWxlc5SMDFRlY2gtc3VwcG9ydJSMEFRyYW5zcG9ydC1tb3Zp
bmeUZYaUaFVdlCiMB0h1c2JhbmSUjA1Ob3QtaW4tZmFtaWx5lIwOT3RoZXItcmVsYXRpdmWUjAlP
d24tY2hpbGSUjAlVbm1hcnJpZWSUjARXaWZllGWGlGhYXZQojBJBbWVyLUluZGlhbi1Fc2tpbW+U
jBJBc2lhbi1QYWMtSXNsYW5kZXKUjAVCbGFja5SMBU90aGVylIwFV2hpdGWUZYaUaFtdlCiMBkZl
bWFsZZSMBE1hbGWUZYaUaF5dlCiMCENhbWJvZGlhlIwGQ2FuYWRhlIwFQ2hpbmGUjAhDb2x1bWJp
YZSMBEN1YmGUjBJEb21pbmljYW4tUmVwdWJsaWOUjAdFY3VhZG9ylIwLRWwtU2FsdmFkb3KUjAdF
bmdsYW5klIwGRnJhbmNllIwHR2VybWFueZSMBkdyZWVjZZSMCUd1YXRlbWFsYZSMBUhhaXRplIwS
SG9sYW5kLU5ldGhlcmxhbmRzlIwISG9uZHVyYXOUjARIb25nlIwHSHVuZ2FyeZSMBUluZGlhlIwE
SXJhbpSMB0lyZWxhbmSUjAVJdGFseZSMB0phbWFpY2GUjAVKYXBhbpSMBExhb3OUjAZNZXhpY2+U
jAlOaWNhcmFndWGUjAROb25llIwaT3V0bHlpbmctVVMoR3VhbS1VU1ZJLWV0YymUjARQZXJ1lIwL
UGhpbGlwcGluZXOUjAZQb2xhbmSUjAhQb3J0dWdhbJSMC1B1ZXJ0by1SaWNvlIwIU2NvdGxhbmSU
jAVTb3V0aJSMBlRhaXdhbpSMCFRoYWlsYW5klIwPVHJpbmFkYWQmVG9iYWdvlIwNVW5pdGVkLVN0
YXRlc5SMB1ZpZXRuYW2UjApZdWdvc2xhdmlhlGWGlHSUjAVtZXRhc5RoZEsDhpSFlIwKY2xhc3Nf
dmFyc5RoYV2UKIwBMJSMATGUZYaUhZSMEm1vZGlmaWVkX3ZhcmlhYmxlc5RdlHViaC4pgZR9lCho
MX2UKIwJdmFyaWFibGVzlF2UjA1kb21haW5fZWRpdG9ylH2UaPNdlChdlCiMA2FnZZRoO0sAaBCI
ZV2UKIwGZm5sd2d0lGg7SwBoEIhlXZQojA1lZHVjYXRpb24tbnVtlGg7SwBoEIhlXZQojAxjYXBp
dGFsLWdhaW6UaDtLAGgQiGVdlCiMDGNhcGl0YWwtbG9zc5RoO0sAaBCIZV2UKIwOaG91cnMtcGVy
LXdlZWuUaDtLAGgQiGVdlCiMCXdvcmtjbGFzc5RoSUsCjGtGZWRlcmFsLWdvdiwgTG9jYWwtZ292
LCBOZXZlci13b3JrZWQsIE5vbmUsIFByaXZhdGUsIFNlbGYtZW1wLWluYywgU2VsZi1lbXAtbm90
LWluYywgU3RhdGUtZ292LCBXaXRob3V0LXBheZSJZV2UKIwJZWR1Y2F0aW9ulGhJSwKMlTEwdGgs
IDExdGgsIDEydGgsIDFzdC00dGgsIDV0aC02dGgsIDd0aC04dGgsIDl0aCwgQXNzb2MtYWNkbSwg
QXNzb2Mtdm9jLCBCYWNoZWxvcnMsIERvY3RvcmF0ZSwgSFMtZ3JhZCwgTWFzdGVycywgUHJlc2No
b29sLCBQcm9mLXNjaG9vbCwgU29tZS1jb2xsZWdllIllXZQojA5tYXJpdGFsLXN0YXR1c5RoSUsC
jGlEaXZvcmNlZCwgTWFycmllZC1BRi1zcG91c2UsIE1hcnJpZWQtY2l2LXNwb3VzZSwgTWFycmll
ZC1zcG91c2UtYWJzZW50LCBOZXZlci1tYXJyaWVkLCBTZXBhcmF0ZWQsIFdpZG93ZWSUiWVdlCiM
Cm9jY3VwYXRpb26UaElLAozeQWRtLWNsZXJpY2FsLCBBcm1lZC1Gb3JjZXMsIENyYWZ0LXJlcGFp
ciwgRXhlYy1tYW5hZ2VyaWFsLCBGYXJtaW5nLWZpc2hpbmcsIEhhbmRsZXJzLWNsZWFuZXJzLCBN
YWNoaW5lLW9wLWluc3BjdCwgTm9uZSwgT3RoZXItc2VydmljZSwgUHJpdi1ob3VzZS1zZXJ2LCBQ
cm9mLXNwZWNpYWx0eSwgUHJvdGVjdGl2ZS1zZXJ2LCBTYWxlcywgVGVjaC1zdXBwb3J0LCBUcmFu
c3BvcnQtbW92aW5nlIllXZQojAxyZWxhdGlvbnNoaXCUaElLAoxCSHVzYmFuZCwgTm90LWluLWZh
bWlseSwgT3RoZXItcmVsYXRpdmUsIE93bi1jaGlsZCwgVW5tYXJyaWVkLCBXaWZllIllXZQojARy
YWNllGhJSwKMO0FtZXItSW5kaWFuLUVza2ltbywgQXNpYW4tUGFjLUlzbGFuZGVyLCBCbGFjaywg
T3RoZXIsIFdoaXRllIllXZQojANzZXiUaElLAowMRmVtYWxlLCBNYWxllIllXZQojA5uYXRpdmUt
Y291bnRyeZRoSUsCjMRDYW1ib2RpYSwgQ2FuYWRhLCBDaGluYSwgQ29sdW1iaWEsIEN1YmEsIERv
bWluaWNhbi1SZXB1YmxpYywgRWN1YWRvciwgRWwtU2FsdmFkb3IsIEVuZ2xhbmQsIEZyYW5jZSwg
R2VybWFueSwgR3JlZWNlLCBHdWF0ZW1hbGEsIEhhaXRpLCBIb2xhbmQtTmV0aGVybGFuZHMsIEhv
bmR1cmFzLCBIb25nLCBIdW5nYXJ5LCBJbmRpYSwgSXJhbiwgLi4ulIllXZQojAZUYXJnZXSUaElL
AowEMCwgMZSIZV2UKIwGcm93X2lklGhmSwJoEIllZXNoKUsBdWhnKGj5SwKGlGj7SwKGlGj9SwKG
lGj/SwKGlGoBAQAASwKGlGoDAQAASwKGlHSUaOUoagUBAABdlCiMC0ZlZGVyYWwtZ292lIwJTG9j
YWwtZ292lIwMTmV2ZXItd29ya2VklIwETm9uZZSMB1ByaXZhdGWUjAxTZWxmLWVtcC1pbmOUjBBT
ZWxmLWVtcC1ub3QtaW5jlIwJU3RhdGUtZ292lIwLV2l0aG91dC1wYXmUZYaUaggBAABdlCiMBDEw
dGiUjAQxMXRolIwEMTJ0aJSMBzFzdC00dGiUjAc1dGgtNnRolIwHN3RoLTh0aJSMAzl0aJSMCkFz
c29jLWFjZG2UjAlBc3NvYy12b2OUjAlCYWNoZWxvcnOUjAlEb2N0b3JhdGWUjAdIUy1ncmFklIwH
TWFzdGVyc5SMCVByZXNjaG9vbJSMC1Byb2Ytc2Nob29slIwMU29tZS1jb2xsZWdllGWGlGoLAQAA
XZQojAhEaXZvcmNlZJSMEU1hcnJpZWQtQUYtc3BvdXNllIwSTWFycmllZC1jaXYtc3BvdXNllIwV
TWFycmllZC1zcG91c2UtYWJzZW50lIwNTmV2ZXItbWFycmllZJSMCVNlcGFyYXRlZJSMB1dpZG93
ZWSUZYaUag4BAABdlCiMDEFkbS1jbGVyaWNhbJSMDEFybWVkLUZvcmNlc5SMDENyYWZ0LXJlcGFp
cpSMD0V4ZWMtbWFuYWdlcmlhbJSMD0Zhcm1pbmctZmlzaGluZ5SMEUhhbmRsZXJzLWNsZWFuZXJz
lIwRTWFjaGluZS1vcC1pbnNwY3SUjAROb25llIwNT3RoZXItc2VydmljZZSMD1ByaXYtaG91c2Ut
c2VydpSMDlByb2Ytc3BlY2lhbHR5lIwPUHJvdGVjdGl2ZS1zZXJ2lIwFU2FsZXOUjAxUZWNoLXN1
cHBvcnSUjBBUcmFuc3BvcnQtbW92aW5nlGWGlGoRAQAAXZQojAdIdXNiYW5klIwNTm90LWluLWZh
bWlseZSMDk90aGVyLXJlbGF0aXZllIwJT3duLWNoaWxklIwJVW5tYXJyaWVklIwEV2lmZZRlhpRq
FAEAAF2UKIwSQW1lci1JbmRpYW4tRXNraW1vlIwSQXNpYW4tUGFjLUlzbGFuZGVylIwFQmxhY2uU
jAVPdGhlcpSMBVdoaXRllGWGlGoXAQAAXZQojAZGZW1hbGWUjARNYWxllGWGlGoaAQAAXZQojAhD
YW1ib2RpYZSMBkNhbmFkYZSMBUNoaW5hlIwIQ29sdW1iaWGUjARDdWJhlIwSRG9taW5pY2FuLVJl
cHVibGljlIwHRWN1YWRvcpSMC0VsLVNhbHZhZG9ylIwHRW5nbGFuZJSMBkZyYW5jZZSMB0dlcm1h
bnmUjAZHcmVlY2WUjAlHdWF0ZW1hbGGUjAVIYWl0aZSMEkhvbGFuZC1OZXRoZXJsYW5kc5SMCEhv
bmR1cmFzlIwESG9uZ5SMB0h1bmdhcnmUjAVJbmRpYZSMBElyYW6UjAdJcmVsYW5klIwFSXRhbHmU
jAdKYW1haWNhlIwFSmFwYW6UjARMYW9zlIwGTWV4aWNvlIwJTmljYXJhZ3VhlIwETm9uZZSMGk91
dGx5aW5nLVVTKEd1YW0tVVNWSS1ldGMplIwEUGVydZSMC1BoaWxpcHBpbmVzlIwGUG9sYW5klIwI
UG9ydHVnYWyUjAtQdWVydG8tUmljb5SMCFNjb3RsYW5klIwFU291dGiUjAZUYWl3YW6UjAhUaGFp
bGFuZJSMD1RyaW5hZGFkJlRvYmFnb5SMDVVuaXRlZC1TdGF0ZXOUjAdWaWV0bmFtlIwKWXVnb3Ns
YXZpYZRlhpRqHQEAAF2UKGjqaOtlhpRqIAEAAEsDhpR0lGjoKWjuXZR1YmguKYGUfZQoaDF9lCho
812UaPV9lGjzXZQoXZQojAxzZXBhbCBsZW5ndGiUaDtLAGgQiGVdlCiMC3NlcGFsIHdpZHRolGg7
SwBoEIhlXZQojAxwZXRhbCBsZW5ndGiUaDtLAGgQiGVdlCiMC3BldGFsIHdpZHRolGg7SwBoEIhl
XZQojARpcmlzlGhJSwGMLElyaXMtc2V0b3NhLCBJcmlzLXZlcnNpY29sb3IsIElyaXMtdmlyZ2lu
aWNhlIllZXNoKUsBdWhnKIwMc2VwYWwgbGVuZ3RolEsChpSMC3NlcGFsIHdpZHRolEsChpSMDHBl
dGFsIGxlbmd0aJRLAoaUjAtwZXRhbCB3aWR0aJRLAoaUdJRo5Slo6IwEaXJpc5RdlCiMC0lyaXMt
c2V0b3NhlIwPSXJpcy12ZXJzaWNvbG9ylIwOSXJpcy12aXJnaW5pY2GUZYaUhZRo7l2UdWJldS4=
</properties>
		<properties node_id="33" format="pickle">gASVaxsAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIxSL1VzZXJzL21fbGF1YmVyL0Ryb3Bib3gva25pbWUtd29ya3NwYWNlL29yYW5nZS9vcmFu
Z2VfbWFjaGluZV9sZWFybmluZy90ZXN0LnBrbC5nepSMBnByZWZpeJSMB2Jhc2VkaXKUjAdyZWxw
YXRolIwLdGVzdC5wa2wuZ3qUjAV0aXRsZZSMAJSMBXNoZWV0lGgQjAtmaWxlX2Zvcm1hdJROdWJo
BimBlH2UKGgJjFMvVXNlcnMvbV9sYXViZXIvRHJvcGJveC9rbmltZS13b3Jrc3BhY2Uvb3Jhbmdl
L29yYW5nZV9tYWNoaW5lX2xlYXJuaW5nL3RyYWluLnBrbC5nepRoC2gMaA2MDHRyYWluLnBrbC5n
epRoD2gQaBFoEGgSTnViaAYpgZR9lChoCYxQL1VzZXJzL21fbGF1YmVyL0Ryb3Bib3gva25pbWUt
d29ya3NwYWNlL29yYW5nZS9vcmFuZ2VfbWFjaGluZV9sZWFybmluZy90cmFpbi5wa2yUaAuMB2Jh
c2VkaXKUaA2MCXRyYWluLnBrbJRoD2gQaBFoEGgSjBtPcmFuZ2UuZGF0YS5pby5QaWNrbGVSZWFk
ZXKUdWJoBimBlH2UKGgJjGkvb3B0L2hvbWVicmV3L0Nhc2tyb29tL21pbmlmb3JnZS9iYXNlL2Vu
dnMvcHlfb3JhbmdlL2xpYi9weXRob24zLjkvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMv
aXJpcy50YWKUaAuMD3NhbXBsZS1kYXRhc2V0c5RoDYwIaXJpcy50YWKUaA9oEGgRaBBoEowbT3Jh
bmdlLmRhdGEuaW8uUGlja2xlUmVhZGVylHViZYwLcmVjZW50X3VybHOUXZSME3NhdmVkV2lkZ2V0
R2VvbWV0cnmUQ0IB2dDLAAMAAAAAA8AAAAFzAAAGPwAAA/8AAAPAAAABjwAABj8AAAP/AAAAAAAA
AAAKAAAAA8AAAAGPAAAGPwAAA/+UjAtzaGVldF9uYW1lc5R9lIwGc291cmNllEsAjAN1cmyUaBCM
DWRvbWFpbl9lZGl0b3KUfZSMC19fdmVyc2lvbl9flEsBjBBjb250ZXh0X3NldHRpbmdzlF2UKIwV
b3Jhbmdld2lkZ2V0LnNldHRpbmdzlIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwJdmFy
aWFibGVzlF2UaCt9lGg3XZQoXZQojANhZ2WUjBRPcmFuZ2UuZGF0YS52YXJpYWJsZZSMEkNvbnRp
bnVvdXNWYXJpYWJsZZSTlEsAaBCIZV2UKIwGZm5sd2d0lGg/SwBoEIhlXZQojA1lZHVjYXRpb24t
bnVtlGg/SwBoEIhlXZQojAxjYXBpdGFsLWdhaW6UaD9LAGgQiGVdlCiMDGNhcGl0YWwtbG9zc5Ro
P0sAaBCIZV2UKIwOaG91cnMtcGVyLXdlZWuUaD9LAGgQiGVdlCiMCXdvcmtjbGFzc5RoPYwQRGlz
Y3JldGVWYXJpYWJsZZSTlEsAjGtGZWRlcmFsLWdvdiwgTG9jYWwtZ292LCBOZXZlci13b3JrZWQs
IE5vbmUsIFByaXZhdGUsIFNlbGYtZW1wLWluYywgU2VsZi1lbXAtbm90LWluYywgU3RhdGUtZ292
LCBXaXRob3V0LXBheZSJZV2UKIwJZWR1Y2F0aW9ulGhNSwCMlTEwdGgsIDExdGgsIDEydGgsIDFz
dC00dGgsIDV0aC02dGgsIDd0aC04dGgsIDl0aCwgQXNzb2MtYWNkbSwgQXNzb2Mtdm9jLCBCYWNo
ZWxvcnMsIERvY3RvcmF0ZSwgSFMtZ3JhZCwgTWFzdGVycywgUHJlc2Nob29sLCBQcm9mLXNjaG9v
bCwgU29tZS1jb2xsZWdllIllXZQojA5tYXJpdGFsLXN0YXR1c5RoTUsAjGlEaXZvcmNlZCwgTWFy
cmllZC1BRi1zcG91c2UsIE1hcnJpZWQtY2l2LXNwb3VzZSwgTWFycmllZC1zcG91c2UtYWJzZW50
LCBOZXZlci1tYXJyaWVkLCBTZXBhcmF0ZWQsIFdpZG93ZWSUiWVdlCiMCm9jY3VwYXRpb26UaE1L
AIzeQWRtLWNsZXJpY2FsLCBBcm1lZC1Gb3JjZXMsIENyYWZ0LXJlcGFpciwgRXhlYy1tYW5hZ2Vy
aWFsLCBGYXJtaW5nLWZpc2hpbmcsIEhhbmRsZXJzLWNsZWFuZXJzLCBNYWNoaW5lLW9wLWluc3Bj
dCwgTm9uZSwgT3RoZXItc2VydmljZSwgUHJpdi1ob3VzZS1zZXJ2LCBQcm9mLXNwZWNpYWx0eSwg
UHJvdGVjdGl2ZS1zZXJ2LCBTYWxlcywgVGVjaC1zdXBwb3J0LCBUcmFuc3BvcnQtbW92aW5nlIll
XZQojAxyZWxhdGlvbnNoaXCUaE1LAIxCSHVzYmFuZCwgTm90LWluLWZhbWlseSwgT3RoZXItcmVs
YXRpdmUsIE93bi1jaGlsZCwgVW5tYXJyaWVkLCBXaWZllIllXZQojARyYWNllGhNSwCMO0FtZXIt
SW5kaWFuLUVza2ltbywgQXNpYW4tUGFjLUlzbGFuZGVyLCBCbGFjaywgT3RoZXIsIFdoaXRllIll
XZQojANzZXiUaE1LAIwMRmVtYWxlLCBNYWxllIllXZQojA5uYXRpdmUtY291bnRyeZRoTUsAjMRD
YW1ib2RpYSwgQ2FuYWRhLCBDaGluYSwgQ29sdW1iaWEsIEN1YmEsIERvbWluaWNhbi1SZXB1Ymxp
YywgRWN1YWRvciwgRWwtU2FsdmFkb3IsIEVuZ2xhbmQsIEZyYW5jZSwgR2VybWFueSwgR3JlZWNl
LCBHdWF0ZW1hbGEsIEhhaXRpLCBIb2xhbmQtTmV0aGVybGFuZHMsIEhvbmR1cmFzLCBIb25nLCBI
dW5nYXJ5LCBJbmRpYSwgSXJhbiwgLi4ulIllXZQojAZUYXJnZXSUaE1LAYwEMCwgMZSIZV2UKIwG
cm93X2lklGg9jA5TdHJpbmdWYXJpYWJsZZSTlEsCaBCJZWVzaC1LAXWMCmF0dHJpYnV0ZXOUKGg8
SwKGlGhBSwKGlGhDSwKGlGhFSwKGlGhHSwKGlGhJSwKGlGhLXZQojAtGZWRlcmFsLWdvdpSMCUxv
Y2FsLWdvdpSMDE5ldmVyLXdvcmtlZJSMBE5vbmWUjAdQcml2YXRllIwMU2VsZi1lbXAtaW5jlIwQ
U2VsZi1lbXAtbm90LWluY5SMCVN0YXRlLWdvdpSMC1dpdGhvdXQtcGF5lGWGlGhQXZQojAQxMHRo
lIwEMTF0aJSMBDEydGiUjAcxc3QtNHRolIwHNXRoLTZ0aJSMBzd0aC04dGiUjAM5dGiUjApBc3Nv
Yy1hY2RtlIwJQXNzb2Mtdm9jlIwJQmFjaGVsb3JzlIwJRG9jdG9yYXRllIwHSFMtZ3JhZJSMB01h
c3RlcnOUjAlQcmVzY2hvb2yUjAtQcm9mLXNjaG9vbJSMDFNvbWUtY29sbGVnZZRlhpRoU12UKIwI
RGl2b3JjZWSUjBFNYXJyaWVkLUFGLXNwb3VzZZSMEk1hcnJpZWQtY2l2LXNwb3VzZZSMFU1hcnJp
ZWQtc3BvdXNlLWFic2VudJSMDU5ldmVyLW1hcnJpZWSUjAlTZXBhcmF0ZWSUjAdXaWRvd2VklGWG
lGhWXZQojAxBZG0tY2xlcmljYWyUjAxBcm1lZC1Gb3JjZXOUjAxDcmFmdC1yZXBhaXKUjA9FeGVj
LW1hbmFnZXJpYWyUjA9GYXJtaW5nLWZpc2hpbmeUjBFIYW5kbGVycy1jbGVhbmVyc5SMEU1hY2hp
bmUtb3AtaW5zcGN0lIwETm9uZZSMDU90aGVyLXNlcnZpY2WUjA9Qcml2LWhvdXNlLXNlcnaUjA5Q
cm9mLXNwZWNpYWx0eZSMD1Byb3RlY3RpdmUtc2VydpSMBVNhbGVzlIwMVGVjaC1zdXBwb3J0lIwQ
VHJhbnNwb3J0LW1vdmluZ5RlhpRoWV2UKIwHSHVzYmFuZJSMDU5vdC1pbi1mYW1pbHmUjA5PdGhl
ci1yZWxhdGl2ZZSMCU93bi1jaGlsZJSMCVVubWFycmllZJSMBFdpZmWUZYaUaFxdlCiMEkFtZXIt
SW5kaWFuLUVza2ltb5SMEkFzaWFuLVBhYy1Jc2xhbmRlcpSMBUJsYWNrlIwFT3RoZXKUjAVXaGl0
ZZRlhpRoX12UKIwGRmVtYWxllIwETWFsZZRlhpRoYl2UKIwIQ2FtYm9kaWGUjAZDYW5hZGGUjAVD
aGluYZSMCENvbHVtYmlhlIwEQ3ViYZSMEkRvbWluaWNhbi1SZXB1YmxpY5SMB0VjdWFkb3KUjAtF
bC1TYWx2YWRvcpSMB0VuZ2xhbmSUjAZGcmFuY2WUjAdHZXJtYW55lIwGR3JlZWNllIwJR3VhdGVt
YWxhlIwFSGFpdGmUjBJIb2xhbmQtTmV0aGVybGFuZHOUjAhIb25kdXJhc5SMBEhvbmeUjAdIdW5n
YXJ5lIwFSW5kaWGUjARJcmFulIwHSXJlbGFuZJSMBUl0YWx5lIwHSmFtYWljYZSMBUphcGFulIwE
TGFvc5SMBk1leGljb5SMCU5pY2FyYWd1YZSMBE5vbmWUjBpPdXRseWluZy1VUyhHdWFtLVVTVkkt
ZXRjKZSMBFBlcnWUjAtQaGlsaXBwaW5lc5SMBlBvbGFuZJSMCFBvcnR1Z2FslIwLUHVlcnRvLVJp
Y2+UjAhTY290bGFuZJSMBVNvdXRolIwGVGFpd2FulIwIVGhhaWxhbmSUjA9UcmluYWRhZCZUb2Jh
Z2+UjA1Vbml0ZWQtU3RhdGVzlIwHVmlldG5hbZSMCll1Z29zbGF2aWGUZYaUdJSMBW1ldGFzlGho
SwOGlIWUjApjbGFzc192YXJzlGhlXZQojAEwlIwBMZRlhpSFlIwSbW9kaWZpZWRfdmFyaWFibGVz
lF2UdWJoMimBlH2UKGg1fZQojAl2YXJpYWJsZXOUXZSMDWRvbWFpbl9lZGl0b3KUfZRo912UKF2U
KIwDYWdllGg/SwBoEIhlXZQojAZmbmx3Z3SUaD9LAGgQiGVdlCiMDWVkdWNhdGlvbi1udW2UaD9L
AGgQiGVdlCiMDGNhcGl0YWwtZ2FpbpRoP0sAaBCIZV2UKIwMY2FwaXRhbC1sb3NzlGg/SwBoEIhl
XZQojA5ob3Vycy1wZXItd2Vla5RoP0sAaBCIZV2UKIwJd29ya2NsYXNzlGhNSwKMa0ZlZGVyYWwt
Z292LCBMb2NhbC1nb3YsIE5ldmVyLXdvcmtlZCwgTm9uZSwgUHJpdmF0ZSwgU2VsZi1lbXAtaW5j
LCBTZWxmLWVtcC1ub3QtaW5jLCBTdGF0ZS1nb3YsIFdpdGhvdXQtcGF5lIllXZQojAllZHVjYXRp
b26UaE1LAoyVMTB0aCwgMTF0aCwgMTJ0aCwgMXN0LTR0aCwgNXRoLTZ0aCwgN3RoLTh0aCwgOXRo
LCBBc3NvYy1hY2RtLCBBc3NvYy12b2MsIEJhY2hlbG9ycywgRG9jdG9yYXRlLCBIUy1ncmFkLCBN
YXN0ZXJzLCBQcmVzY2hvb2wsIFByb2Ytc2Nob29sLCBTb21lLWNvbGxlZ2WUiWVdlCiMDm1hcml0
YWwtc3RhdHVzlGhNSwKMaURpdm9yY2VkLCBNYXJyaWVkLUFGLXNwb3VzZSwgTWFycmllZC1jaXYt
c3BvdXNlLCBNYXJyaWVkLXNwb3VzZS1hYnNlbnQsIE5ldmVyLW1hcnJpZWQsIFNlcGFyYXRlZCwg
V2lkb3dlZJSJZV2UKIwKb2NjdXBhdGlvbpRoTUsCjN5BZG0tY2xlcmljYWwsIEFybWVkLUZvcmNl
cywgQ3JhZnQtcmVwYWlyLCBFeGVjLW1hbmFnZXJpYWwsIEZhcm1pbmctZmlzaGluZywgSGFuZGxl
cnMtY2xlYW5lcnMsIE1hY2hpbmUtb3AtaW5zcGN0LCBOb25lLCBPdGhlci1zZXJ2aWNlLCBQcml2
LWhvdXNlLXNlcnYsIFByb2Ytc3BlY2lhbHR5LCBQcm90ZWN0aXZlLXNlcnYsIFNhbGVzLCBUZWNo
LXN1cHBvcnQsIFRyYW5zcG9ydC1tb3ZpbmeUiWVdlCiMDHJlbGF0aW9uc2hpcJRoTUsCjEJIdXNi
YW5kLCBOb3QtaW4tZmFtaWx5LCBPdGhlci1yZWxhdGl2ZSwgT3duLWNoaWxkLCBVbm1hcnJpZWQs
IFdpZmWUiWVdlCiMBHJhY2WUaE1LAow7QW1lci1JbmRpYW4tRXNraW1vLCBBc2lhbi1QYWMtSXNs
YW5kZXIsIEJsYWNrLCBPdGhlciwgV2hpdGWUiWVdlCiMA3NleJRoTUsCjAxGZW1hbGUsIE1hbGWU
iWVdlCiMDm5hdGl2ZS1jb3VudHJ5lGhNSwKMxENhbWJvZGlhLCBDYW5hZGEsIENoaW5hLCBDb2x1
bWJpYSwgQ3ViYSwgRG9taW5pY2FuLVJlcHVibGljLCBFY3VhZG9yLCBFbC1TYWx2YWRvciwgRW5n
bGFuZCwgRnJhbmNlLCBHZXJtYW55LCBHcmVlY2UsIEd1YXRlbWFsYSwgSGFpdGksIEhvbGFuZC1O
ZXRoZXJsYW5kcywgSG9uZHVyYXMsIEhvbmcsIEh1bmdhcnksIEluZGlhLCBJcmFuLCAuLi6UiWVd
lCiMBlRhcmdldJRoTUsCjAQwLCAxlIhlXZQojAZyb3dfaWSUaGpLAmgQiWVlc2gtSwF1aGsoaP1L
AoaUaP9LAoaUagEBAABLAoaUagMBAABLAoaUagUBAABLAoaUagcBAABLAoaUdJRo6ShqCQEAAF2U
KIwLRmVkZXJhbC1nb3aUjAlMb2NhbC1nb3aUjAxOZXZlci13b3JrZWSUjAROb25llIwHUHJpdmF0
ZZSMDFNlbGYtZW1wLWluY5SMEFNlbGYtZW1wLW5vdC1pbmOUjAlTdGF0ZS1nb3aUjAtXaXRob3V0
LXBheZRlhpRqDAEAAF2UKIwEMTB0aJSMBDExdGiUjAQxMnRolIwHMXN0LTR0aJSMBzV0aC02dGiU
jAc3dGgtOHRolIwDOXRolIwKQXNzb2MtYWNkbZSMCUFzc29jLXZvY5SMCUJhY2hlbG9yc5SMCURv
Y3RvcmF0ZZSMB0hTLWdyYWSUjAdNYXN0ZXJzlIwJUHJlc2Nob29slIwLUHJvZi1zY2hvb2yUjAxT
b21lLWNvbGxlZ2WUZYaUag8BAABdlCiMCERpdm9yY2VklIwRTWFycmllZC1BRi1zcG91c2WUjBJN
YXJyaWVkLWNpdi1zcG91c2WUjBVNYXJyaWVkLXNwb3VzZS1hYnNlbnSUjA1OZXZlci1tYXJyaWVk
lIwJU2VwYXJhdGVklIwHV2lkb3dlZJRlhpRqEgEAAF2UKIwMQWRtLWNsZXJpY2FslIwMQXJtZWQt
Rm9yY2VzlIwMQ3JhZnQtcmVwYWlylIwPRXhlYy1tYW5hZ2VyaWFslIwPRmFybWluZy1maXNoaW5n
lIwRSGFuZGxlcnMtY2xlYW5lcnOUjBFNYWNoaW5lLW9wLWluc3BjdJSMBE5vbmWUjA1PdGhlci1z
ZXJ2aWNllIwPUHJpdi1ob3VzZS1zZXJ2lIwOUHJvZi1zcGVjaWFsdHmUjA9Qcm90ZWN0aXZlLXNl
cnaUjAVTYWxlc5SMDFRlY2gtc3VwcG9ydJSMEFRyYW5zcG9ydC1tb3ZpbmeUZYaUahUBAABdlCiM
B0h1c2JhbmSUjA1Ob3QtaW4tZmFtaWx5lIwOT3RoZXItcmVsYXRpdmWUjAlPd24tY2hpbGSUjAlV
bm1hcnJpZWSUjARXaWZllGWGlGoYAQAAXZQojBJBbWVyLUluZGlhbi1Fc2tpbW+UjBJBc2lhbi1Q
YWMtSXNsYW5kZXKUjAVCbGFja5SMBU90aGVylIwFV2hpdGWUZYaUahsBAABdlCiMBkZlbWFsZZSM
BE1hbGWUZYaUah4BAABdlCiMCENhbWJvZGlhlIwGQ2FuYWRhlIwFQ2hpbmGUjAhDb2x1bWJpYZSM
BEN1YmGUjBJEb21pbmljYW4tUmVwdWJsaWOUjAdFY3VhZG9ylIwLRWwtU2FsdmFkb3KUjAdFbmds
YW5klIwGRnJhbmNllIwHR2VybWFueZSMBkdyZWVjZZSMCUd1YXRlbWFsYZSMBUhhaXRplIwSSG9s
YW5kLU5ldGhlcmxhbmRzlIwISG9uZHVyYXOUjARIb25nlIwHSHVuZ2FyeZSMBUluZGlhlIwESXJh
bpSMB0lyZWxhbmSUjAVJdGFseZSMB0phbWFpY2GUjAVKYXBhbpSMBExhb3OUjAZNZXhpY2+UjAlO
aWNhcmFndWGUjAROb25llIwaT3V0bHlpbmctVVMoR3VhbS1VU1ZJLWV0YymUjARQZXJ1lIwLUGhp
bGlwcGluZXOUjAZQb2xhbmSUjAhQb3J0dWdhbJSMC1B1ZXJ0by1SaWNvlIwIU2NvdGxhbmSUjAVT
b3V0aJSMBlRhaXdhbpSMCFRoYWlsYW5klIwPVHJpbmFkYWQmVG9iYWdvlIwNVW5pdGVkLVN0YXRl
c5SMB1ZpZXRuYW2UjApZdWdvc2xhdmlhlGWGlGohAQAAXZQoaO5o72WGlGokAQAASwOGlHSUaOwp
aPJdlHViaDIpgZR9lChoNX2UKGj3XZRo+X2UaPddlChdlCiMDHNlcGFsIGxlbmd0aJRoP0sAaBCI
ZV2UKIwLc2VwYWwgd2lkdGiUaD9LAGgQiGVdlCiMDHBldGFsIGxlbmd0aJRoP0sAaBCIZV2UKIwL
cGV0YWwgd2lkdGiUaD9LAGgQiGVdlCiMBGlyaXOUaE1LAYwsSXJpcy1zZXRvc2EsIElyaXMtdmVy
c2ljb2xvciwgSXJpcy12aXJnaW5pY2GUiWVlc2gtSwF1aGsojAxzZXBhbCBsZW5ndGiUSwKGlIwL
c2VwYWwgd2lkdGiUSwKGlIwMcGV0YWwgbGVuZ3RolEsChpSMC3BldGFsIHdpZHRolEsChpR0lGjp
KWjsjARpcmlzlF2UKIwLSXJpcy1zZXRvc2GUjA9JcmlzLXZlcnNpY29sb3KUjA5JcmlzLXZpcmdp
bmljYZRlhpSFlGjyXZR1YmV1Lg==
</properties>
		<properties node_id="34" format="literal">{'auto_commit': True, 'color_by_class': True, 'controlAreaVisible': True, 'dist_color_RGB': (220, 220, 220, 255), 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x03p\x00\x00\x01\xa2\x00\x00\t\n\x00\x00\x04\x92\x00\x00\x03p\x00\x00\x01\xbe\x00\x00\t\n\x00\x00\x04\x92\x00\x00\x00\x00\x00\x00\x00\x00\n\x00\x00\x00\x03p\x00\x00\x01\xbe\x00\x00\t\n\x00\x00\x04\x92', 'select_rows': True, 'selected_cols': [], 'selected_rows': [], 'show_attribute_labels': True, 'show_distributions': False, '__version__': 2}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
